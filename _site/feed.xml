

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Yeahyun Kim</title>
  <subtitle>소소한 개발 일지</subtitle>
  <updated>2024-03-08T17:49:50+09:00</updated>
  <author>
    <name>Youihyon Kim</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 Youihyon Kim </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>mySQL 문법 (8) - Aliases 컬럼명 변경하기</title>
    <link href="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(8)-Aliases(AS)-%EC%BB%AC%EB%9F%BC,-%ED%85%8C%EC%9D%B4%EB%B8%94%EB%AA%85-%EB%B3%84%EC%B9%AD%EC%A3%BC%EA%B8%B0/" rel="alternate" type="text/html" title="mySQL 문법 (8) - Aliases 컬럼명 변경하기" />
    <published>2024-03-08T00:00:00+09:00</published>
  
    <updated>2024-03-08T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(8)-Aliases(AS)-%EC%BB%AC%EB%9F%BC,-%ED%85%8C%EC%9D%B4%EB%B8%94%EB%AA%85-%EB%B3%84%EC%B9%AD%EC%A3%BC%EA%B8%B0/</id>
    <content src="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(8)-Aliases(AS)-%EC%BB%AC%EB%9F%BC,-%ED%85%8C%EC%9D%B4%EB%B8%94%EB%AA%85-%EB%B3%84%EC%B9%AD%EC%A3%BC%EA%B8%B0/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="mySQL" />
    
    <category term="Grammar" />
    
  

  
    <summary>
      





      💡Aliases

01. Aliases(AS)


  Aliases are used to give a table, or a column in a table, a temporary name.
Aliases are often used to make column names more readable.
An alias only exists for the duration of that query.
An alias is created with the AS keyword.


AS 는 컬럼명, 테이블명에 별칭을 주어, 데이터 조회 후 가독성이 좋아보이게 만드는데 굉장히 효과적이다. 
AS는 해당 쿼리가 실행되었을 동안만 존재하고, 직접적으로 테이블에 영향을 주지 않는다.

테이블에 별칭을 주었으면, 해당 별칭으로 컬...
    </summary>
  

  </entry>

  
  <entry>
    <title>mySQL 문법 (7) - LIMIT 원하는 데이터 수만큼 조회하기</title>
    <link href="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(7)-LIMIT-%EC%9B%90%ED%95%98%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EB%A7%8C%ED%81%BC-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="mySQL 문법 (7) - LIMIT 원하는 데이터 수만큼 조회하기" />
    <published>2024-03-08T00:00:00+09:00</published>
  
    <updated>2024-03-08T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(7)-LIMIT-%EC%9B%90%ED%95%98%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EB%A7%8C%ED%81%BC-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0/</id>
    <content src="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(7)-LIMIT-%EC%9B%90%ED%95%98%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EB%A7%8C%ED%81%BC-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="mySQL" />
    
    <category term="Grammar" />
    
  

  
    <summary>
      





      💡LIMIT

01. LIMIT


  The LIMIT clause is used to specify the number of records to return.
The LIMIT clause is useful on large tables with thousands of records. Returning a large number of records can impact performance.


LIMIT 절은 대량의 데이터를 조회할때 유용하게 사용할 수 있다.
만약, customers라는 테이블을 조회했는데, 고객 수가 100,000,000명이면, 이를 조회하는데 컴퓨터에 무리가 갈 수 있고 시간이 굉장히 오래 걸린다.



💡문법 Syntax

01. LIMIT 숫자

SELECT * FROM 테...
    </summary>
  

  </entry>

  
  <entry>
    <title>mySQL 문법 (6) - ORDER BY 오름차순,내림차순으로 정렬하기</title>
    <link href="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(6)-ORDER-BY-%EC%98%A4%EB%A6%84%EC%B0%A8%EC%88%9C,%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="mySQL 문법 (6) - ORDER BY 오름차순,내림차순으로 정렬하기" />
    <published>2024-03-08T00:00:00+09:00</published>
  
    <updated>2024-03-08T16:43:16+09:00</updated>
  
    <id>http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(6)-ORDER-BY-%EC%98%A4%EB%A6%84%EC%B0%A8%EC%88%9C,%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/</id>
    <content src="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(6)-ORDER-BY-%EC%98%A4%EB%A6%84%EC%B0%A8%EC%88%9C,%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="mySQL" />
    
    <category term="Grammar" />
    
  

  
    <summary>
      





      💡ORDER BY

01. ORDER BY


  The ORDER BY keyword is used to sort the result-set in ascending or descending order. 
The ORDER BY keyword sorts the records in ascending order by default. To sort the records in descending order, use the DESC keyword.


ORDER BY 는 결과의 집합을 오름차 / 내림차순으로 정렬하는데 사용된다.



💡문법 Syntax

01. ORDER BY ASC(오름차순)

SELECT * FROM 테이블 ORDER BY 컬럼1 ASC, 컬럼2 ASC



02. ORDER BY DE...
    </summary>
  

  </entry>

  
  <entry>
    <title>mySQL 문법 (5) - BETWEEN, IN, LIKE</title>
    <link href="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(5)-BETWEEN,-IN,-LIKE/" rel="alternate" type="text/html" title="mySQL 문법 (5) - BETWEEN, IN, LIKE" />
    <published>2024-03-08T00:00:00+09:00</published>
  
    <updated>2024-03-08T16:12:24+09:00</updated>
  
    <id>http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(5)-BETWEEN,-IN,-LIKE/</id>
    <content src="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(5)-BETWEEN,-IN,-LIKE/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="mySQL" />
    
    <category term="Grammar" />
    
  

  
    <summary>
      





      💡BETWEEN, IN, LIKE

01. BETWEEN


  The BETWEEN operator selects values within a given range. The values can be numbers, text, or dates.
The BETWEEN operator is inclusive: begin and end values are included.


BETWEEN 연산자는 주어진 범위 내의 값을 선택하고, 값은 숫자, 문자열 혹은 날짜일 수 있습니다.
BETWEEN 연산자는 시작 및 끝 값이 포함되어있어, 조건의 값을 포괄합니다.


02. IN


  The IN operator allows you to specify multiple values in a WHERE clause...
    </summary>
  

  </entry>

  
  <entry>
    <title>mySQL 문법 (4) - 비교연산자 종류</title>
    <link href="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(4)-%EB%B9%84%EA%B5%90%EC%97%B0%EC%82%B0%EC%9E%90-%EC%A2%85%EB%A5%98/" rel="alternate" type="text/html" title="mySQL 문법 (4) - 비교연산자 종류" />
    <published>2024-03-08T00:00:00+09:00</published>
  
    <updated>2024-03-08T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(4)-%EB%B9%84%EA%B5%90%EC%97%B0%EC%82%B0%EC%9E%90-%EC%A2%85%EB%A5%98/</id>
    <content src="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(4)-%EB%B9%84%EA%B5%90%EC%97%B0%EC%82%B0%EC%9E%90-%EC%A2%85%EB%A5%98/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="mySQL" />
    
    <category term="Grammar" />
    
  

  
    <summary>
      





      💡비교연산자

01. 비교연산자란 - 공식문서


  Comparison operations result in a value of 1 (TRUE), 0 (FALSE), or NULL. These operations work for both numbers and strings. Strings are automatically converted to numbers and numbers to strings as necessary.


비교 연산의 결과는 1 (TRUE), 0 (FALSE) 혹은 NULL 이고, 숫자와 문자열 모두에 적용할 수 있습니다. 상황에 따라 문자열은 자동으로 숫자로 변환되고, 숫자는 문자열로 변환됩니다.


02. 비교연산자 종류


  
    
      이름
      설명
 ...
    </summary>
  

  </entry>

</feed>


