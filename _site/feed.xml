

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Yeahyun Kim</title>
  <subtitle>소소한 개발 일지</subtitle>
  <updated>2024-03-08T12:01:36+09:00</updated>
  <author>
    <name>Youihyon Kim</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 Youihyon Kim </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>mySQL 문법 (4) - 비교연산자 종류</title>
    <link href="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(4)-%EB%B9%84%EA%B5%90%EC%97%B0%EC%82%B0%EC%9E%90-%EC%A2%85%EB%A5%98/" rel="alternate" type="text/html" title="mySQL 문법 (4) - 비교연산자 종류" />
    <published>2024-03-08T00:00:00+09:00</published>
  
    <updated>2024-03-08T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(4)-%EB%B9%84%EA%B5%90%EC%97%B0%EC%82%B0%EC%9E%90-%EC%A2%85%EB%A5%98/</id>
    <content src="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(4)-%EB%B9%84%EA%B5%90%EC%97%B0%EC%82%B0%EC%9E%90-%EC%A2%85%EB%A5%98/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="mySQL" />
    
    <category term="Grammar" />
    
  

  
    <summary>
      





      💡비교연산자

01. 비교연산자란 - 공식문서


  Comparison operations result in a value of 1 (TRUE), 0 (FALSE), or NULL. These operations work for both numbers and strings. Strings are automatically converted to numbers and numbers to strings as necessary.


비교 연산의 결과는 1 (TRUE), 0 (FALSE) 혹은 NULL 이고, 숫자와 문자열 모두에 적용할 수 있습니다. 상황에 따라 문자열은 자동으로 숫자로 변환되고, 숫자는 문자열로 변환됩니다.


02. 비교연산자 종류


  
    
      이름
      설명
 ...
    </summary>
  

  </entry>

  
  <entry>
    <title>mySQL 문법 (3) - AND, OR, NOT 연산자</title>
    <link href="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(3)-AND,-OR,-NOT-%EB%85%BC%EB%A6%AC%EC%97%B0%EC%82%B0%EC%9E%90/" rel="alternate" type="text/html" title="mySQL 문법 (3) - AND, OR, NOT 연산자" />
    <published>2024-03-08T00:00:00+09:00</published>
  
    <updated>2024-03-08T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(3)-AND,-OR,-NOT-%EB%85%BC%EB%A6%AC%EC%97%B0%EC%82%B0%EC%9E%90/</id>
    <content src="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(3)-AND,-OR,-NOT-%EB%85%BC%EB%A6%AC%EC%97%B0%EC%82%B0%EC%9E%90/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="mySQL" />
    
    <category term="Grammar" />
    
  

  
    <summary>
      





      💡AND, OR, NOT 논리연산자

01. AND


  The AND operators are used to filter records based on more than one condition:


AND 연산자는 두개의 조건이 모두 true 인 경우의 데이터를 필터링 합니다.
AND 연산자는 WHERE절과 조합하여 사용할 수 있습니다.


02. OR


  The OR operators are used to filter records based on more than one condition:


OR 연산자는 두개중 하나의 조건이 true 인 경우의 데이터를 필터링 합니다.
OR 연산자는 WHERE절과 조합하여 사용할 수 있습니다.


03. NOT


  The NOT operator...
    </summary>
  

  </entry>

  
  <entry>
    <title>mySQL 문법 (2) - WHERE 조건에 맞는 데이터만 가져오기</title>
    <link href="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(2)-WHERE-%EC%A1%B0%EA%B1%B4%EC%97%90-%EB%A7%9E%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A7%8C-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/" rel="alternate" type="text/html" title="mySQL 문법 (2) - WHERE 조건에 맞는 데이터만 가져오기" />
    <published>2024-03-08T00:00:00+09:00</published>
  
    <updated>2024-03-08T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(2)-WHERE-%EC%A1%B0%EA%B1%B4%EC%97%90-%EB%A7%9E%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A7%8C-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/</id>
    <content src="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(2)-WHERE-%EC%A1%B0%EA%B1%B4%EC%97%90-%EB%A7%9E%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A7%8C-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="mySQL" />
    
    <category term="Grammar" />
    
  

  
    <summary>
      





      💡WHERE

01. WHERE 절이란


  The WHERE clause is used to filter records.
It is used to extract only those records that fulfill a specified condition.


WHERE 절은 데이터를 필터링하여 원하는 조건에 맞는 데이터를 불러오는데 사용된다.
여기서, 데이터 조회 뿐만 아닌, UPDATE, DELETE 등 에서도 사용이 가능하다.




💡문법 Syntax

01. 한개의 데이터 필터링하기

SELECT * FROM 테이블
WHERE 조건 = "값"



02. 한개 이상의 데이터 필터링하기

SELECT * FROM 테이블
WHERE 조건 = 값 and 조건 = 값





💡사용예시

01....
    </summary>
  

  </entry>

  
  <entry>
    <title>mySQL 문법 (1) - SELECT,  FROM 데이터 조회하기</title>
    <link href="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(1)-SELECT,-FROM-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="mySQL 문법 (1) - SELECT,  FROM 데이터 조회하기" />
    <published>2024-03-06T00:00:00+09:00</published>
  
    <updated>2024-03-06T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(1)-SELECT,-FROM-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0/</id>
    <content src="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(1)-SELECT,-FROM-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="mySQL" />
    
    <category term="Grammar" />
    
  

  
    <summary>
      





      SELECT, FROM
01. SELECT

SELECT 는 데이터를 가져오는 기본 명령어로, 데이터를 조회하는 모든 Query에 사용된다.
기본적으로 컬럼을 선택한다고 생각하면 된다.


02. FROM

FROM 은 데이터를 가져올 테이블을 특정해주는 명령어이다.
기본적으로 테이블을 선택한다고 생각하면 된다.



문법보기

01. 테이블의 모든 컬럼 불러오기

select * from food_orders


위의 쿼리를 해석하면, food_orders 라는 테이블에서 모든 컬럼을 선택해서 가져와줘 가 된다.





02. 테이블의 원하는 컬럼 불러오기

select order_id, restaurant_name from food_orders


위의 쿼리를 해석하면, food_orders 라는...
    </summary>
  

  </entry>

  
  <entry>
    <title>플러그인 - Spring Boot Devtools</title>
    <link href="http://localhost:4000/posts/%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-thymeleaf/" rel="alternate" type="text/html" title="플러그인 - Spring Boot Devtools" />
    <published>2024-02-27T00:00:00+09:00</published>
  
    <updated>2024-02-27T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-thymeleaf/</id>
    <content src="http://localhost:4000/posts/%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-thymeleaf/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="Java" />
    
    <category term="Plugin" />
    
  

  
    <summary>
      





      thymeleaf - HTML 동적 렌더링

thymeleaf(타임리프)

타임리프는 백엔드 서버에서 Html을 동적으로 렌더링  Java Template Engine 이다.
해당 플러그인의 주요 목적은 유지 관리가 수월한 템플릿을 작성하도록 지원해주고, 타임리프의 핵심 기능인 Natural Template 을 통해 제공해주는데, 서버 사이드 렌더링을 하는데 필요한 데이터 값이 없더라도, 프로토 타입으로서의 역할을 해줄 수 있는 걸 말한다.

이 특징이 기존 Java Template Engine 중의 하나인 Jsp 와 가장 다른 점인데 Jsp 는 화면을 보기 위해선 서버의 도움이 필요하다. 그치만 Thymeleaf 는 서버의 도움없이 프로토 타입 형태로도 뷰를 볼 수 있다.

그렇기 때문에 Thymel...
    </summary>
  

  </entry>

</feed>


