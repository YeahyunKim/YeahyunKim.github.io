

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Yeahyun Kim</title>
  <subtitle>소소한 개발 일지</subtitle>
  <updated>2024-03-11T17:53:06+09:00</updated>
  <author>
    <name>Youihyon Kim</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 Youihyon Kim </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>JAVA 문법 (2) - 변수 명명 규칙</title>
    <link href="http://localhost:4000/posts/JAVA-%EB%AC%B8%EB%B2%95-(2)-%EB%B3%80%EC%88%98-%EB%AA%85%EB%AA%85-%EA%B7%9C%EC%B9%99/" rel="alternate" type="text/html" title="JAVA 문법 (2) - 변수 명명 규칙" />
    <published>2024-03-11T00:00:00+09:00</published>
  
    <updated>2024-03-11T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/JAVA-%EB%AC%B8%EB%B2%95-(2)-%EB%B3%80%EC%88%98-%EB%AA%85%EB%AA%85-%EA%B7%9C%EC%B9%99/</id>
    <content src="http://localhost:4000/posts/JAVA-%EB%AC%B8%EB%B2%95-(2)-%EB%B3%80%EC%88%98-%EB%AA%85%EB%AA%85-%EA%B7%9C%EC%B9%99/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="Java" />
    
    <category term="Grammar" />
    
  

  
    <summary>
      





      🔎 변수(Variable)

01. 변수 명명 규칙


  자바에서 변수의 이름을 짓는데는 규칙과 관례가 있다.
	- 규칙은 필수
	- 관례는 선택
관례는 필수는 아니지만, 전세계 개발자가 해당 관례를 따르기 때문에 사실상 규칙이라고 생각해도 된다.



02. 규칙


  • 변수 이름은 숫자로 시작할 수 없다 (예: 1num, 1first)
• 변수 이름에는 공백이 들어갈 수 없다.
• 자바의 예약어를 변수 이름으로 사용할 수 없다.(예: int, class, public, static 등등)
• 변수 이름에는 영문자, 숫자, 달러 기호 또는 언더바(_) 만 사용할 수 있다.



03. 관례


  • 소문자로 시작하는 Camel Case ( 낙타 표기법 ) (예 : myName, randomN...
    </summary>
  

  </entry>

  
  <entry>
    <title>JAVA 문법 (1) - 변수 Variable</title>
    <link href="http://localhost:4000/posts/JAVA-%EB%AC%B8%EB%B2%95-(1)-%EB%B3%80%EC%88%98-Variable/" rel="alternate" type="text/html" title="JAVA 문법 (1) - 변수 Variable" />
    <published>2024-03-11T00:00:00+09:00</published>
  
    <updated>2024-03-11T17:50:08+09:00</updated>
  
    <id>http://localhost:4000/posts/JAVA-%EB%AC%B8%EB%B2%95-(1)-%EB%B3%80%EC%88%98-Variable/</id>
    <content src="http://localhost:4000/posts/JAVA-%EB%AC%B8%EB%B2%95-(1)-%EB%B3%80%EC%88%98-Variable/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="Java" />
    
    <category term="Grammar" />
    
  

  
    <summary>
      





      🔎 변수(Variable)

01. 변수란?


  변수(Variable)는 데이터를 저장하는 공간이다.
변수는 특정 데이터 타입을 가지며, 이 데이터 타입에 따라 저장할 수 있는 데이터의 종류와 크기가 결정된다. 변수를 사용하면 데이터를 보다 쉽게 관리할 수 있고, 코드 내에서 값을 재사용하거나 변경할 수 있다.



02. 왜 사용해야하나?
public class Var1 {  
    public static void main(String[] args) {  
        System.out.println(10);  
        System.out.println(10);  
        System.out.println(10);  
    }  
}

//10
//10
//10


위의 코...
    </summary>
  

  </entry>

  
  <entry>
    <title>mySQL 문법 (9) - UPDATE 데이터 수정하기</title>
    <link href="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(9)-UPDATE-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="mySQL 문법 (9) - UPDATE 데이터 수정하기" />
    <published>2024-03-08T00:00:00+09:00</published>
  
    <updated>2024-03-08T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(9)-UPDATE-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/</id>
    <content src="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(9)-UPDATE-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="mySQL" />
    
    <category term="Grammarㅤ" />
    
  

  
    <summary>
      





      💡UPDATE

01. UPDATE


  The UPDATE statement is used to modify the existing records in a table.


UPDATE 는 테이블의 기존 데이터 값을 수정하는데 사용한다.

02. 주의사항


  반드시 WHERE절을 사용하여 특정 데이터만 수정하는데 사용하자. 그렇지 않으면 모든 기록이 업데이트 될 수 있기 때문..




💡문법 Syntax

01. 특정한 컬럼의 데이터값을 수정할 때

UPDATE 테이블명 SET 컬럼1 = '변경할 값' WHERE 조건1;



02. 여러개 컬럼의 데이터값을 수정할 때

UPDATE 테이블명 SET 컬럼1 = '변경할 값', 컬럼2 = '변경할 값' WHERE 조건1;




💡사용예시

0...
    </summary>
  

  </entry>

  
  <entry>
    <title>mySQL 문법 (8) - Aliases 컬럼명 변경하기</title>
    <link href="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(8)-Aliases-%EC%BB%AC%EB%9F%BC%EB%AA%85-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="mySQL 문법 (8) - Aliases 컬럼명 변경하기" />
    <published>2024-03-08T00:00:00+09:00</published>
  
    <updated>2024-03-08T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(8)-Aliases-%EC%BB%AC%EB%9F%BC%EB%AA%85-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0/</id>
    <content src="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(8)-Aliases-%EC%BB%AC%EB%9F%BC%EB%AA%85-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="mySQL" />
    
    <category term="Grammarㅤ" />
    
  

  
    <summary>
      





      💡Aliases

01. Aliases(AS)


  Aliases are used to give a table, or a column in a table, a temporary name.
Aliases are often used to make column names more readable.
An alias only exists for the duration of that query.
An alias is created with the AS keyword.


AS 는 컬럼명, 테이블명에 별칭을 주어, 데이터 조회 후 가독성이 좋아보이게 만드는데 굉장히 효과적이다. 
AS는 해당 쿼리가 실행되었을 동안만 존재하고, 직접적으로 테이블에 영향을 주지 않는다.

테이블에 별칭을 주었으면, 해당 별칭으로 컬...
    </summary>
  

  </entry>

  
  <entry>
    <title>mySQL 문법 (7) - LIMIT 원하는 데이터 수만큼 조회하기</title>
    <link href="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(7)-LIMIT-%EC%9B%90%ED%95%98%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EB%A7%8C%ED%81%BC-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="mySQL 문법 (7) - LIMIT 원하는 데이터 수만큼 조회하기" />
    <published>2024-03-08T00:00:00+09:00</published>
  
    <updated>2024-03-11T17:50:08+09:00</updated>
  
    <id>http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(7)-LIMIT-%EC%9B%90%ED%95%98%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EB%A7%8C%ED%81%BC-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0/</id>
    <content src="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(7)-LIMIT-%EC%9B%90%ED%95%98%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EB%A7%8C%ED%81%BC-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="mySQL" />
    
    <category term="Grammarㅤ" />
    
  

  
    <summary>
      





      💡LIMIT

01. LIMIT


  The LIMIT clause is used to specify the number of records to return.
The LIMIT clause is useful on large tables with thousands of records. Returning a large number of records can impact performance.


LIMIT 절은 대량의 데이터를 조회할때 유용하게 사용할 수 있다.
만약, customers라는 테이블을 조회했는데, 고객 수가 100,000,000명이면, 이를 조회하는데 컴퓨터에 무리가 갈 수 있고 시간이 굉장히 오래 걸린다.



💡문법 Syntax

01. LIMIT 숫자

SELECT * FROM 테...
    </summary>
  

  </entry>

</feed>


