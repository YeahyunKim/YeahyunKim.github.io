

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Yeahyun Kim</title>
  <subtitle>소소한 개발 일지</subtitle>
  <updated>2024-03-12T16:06:12+09:00</updated>
  <author>
    <name>Youihyon Kim</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 Youihyon Kim </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>JAVA study (6) - 리터럴 상수</title>
    <link href="http://localhost:4000/posts/JAVA-study-(6)-%EB%A6%AC%ED%84%B0%EB%9F%B4%EA%B3%BC-%EC%83%81%EC%88%98%EC%9D%98-%EC%B0%A8%EC%9D%B4/" rel="alternate" type="text/html" title="JAVA study (6) - 리터럴 상수" />
    <published>2024-03-12T00:00:00+09:00</published>
  
    <updated>2024-03-12T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/JAVA-study-(6)-%EB%A6%AC%ED%84%B0%EB%9F%B4%EA%B3%BC-%EC%83%81%EC%88%98%EC%9D%98-%EC%B0%A8%EC%9D%B4/</id>
    <content src="http://localhost:4000/posts/JAVA-study-(6)-%EB%A6%AC%ED%84%B0%EB%9F%B4%EA%B3%BC-%EC%83%81%EC%88%98%EC%9D%98-%EC%B0%A8%EC%9D%B4/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="Java" />
    
    <category term="Study" />
    
  

  
    <summary>
      





      🔎 리터럴

01. 리터럴(Literal) 이란?


  Literal은 데이터(값) 그 자체, 즉 변수에 넣은 변하지 않는 데이터 즉 문자 그대로의 값이라고 할 수 있다. 리터럴은 변수에 할당될 수 있는 구체적인 값을 직접 표현한 것이다.



02. 리터럴(Literal)의 종류 및 선언방법

1) 정수 리터럴 
정수 값을 나타내며, 10진수, 16진수, 8진수, 2진수로 표현
int a = 100
int b = 0x6F
int c = 0144
int d = 0b1010110

// a,b,c,d 는 변수, 값들은 리터럴


2) 부동 소수점 리터럴 
 실수 값을 나타내며, 소수점이 포함된 숫자나 지수를 사용해서 표현
double a = 3.14
double b = 2.5e2

// a,b 는 변...
    </summary>
  

  </entry>

  
  <entry>
    <title>JAVA study (5) - 전위,후위 증감 연산자</title>
    <link href="http://localhost:4000/posts/JAVA-study-(5)-%EC%A0%84%EC%9C%84,%ED%9B%84%EC%9C%84-%EC%A6%9D%EA%B0%90-%EC%97%B0%EC%82%B0%EC%9E%90/" rel="alternate" type="text/html" title="JAVA study (5) - 전위,후위 증감 연산자" />
    <published>2024-03-12T00:00:00+09:00</published>
  
    <updated>2024-03-12T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/JAVA-study-(5)-%EC%A0%84%EC%9C%84,%ED%9B%84%EC%9C%84-%EC%A6%9D%EA%B0%90-%EC%97%B0%EC%82%B0%EC%9E%90/</id>
    <content src="http://localhost:4000/posts/JAVA-study-(5)-%EC%A0%84%EC%9C%84,%ED%9B%84%EC%9C%84-%EC%A6%9D%EA%B0%90-%EC%97%B0%EC%82%B0%EC%9E%90/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="Java" />
    
    <category term="Study" />
    
  

  
    <summary>
      





      🔎 전위, 후위 증감 연산자란?

01. 전위 증감 연산자

++a , --a
전위 증감 연산자는 연산자가 변수의 앞에 있고,
변수의 값을 먼저 증가시키거나 감소시킨 후 값을 대입해준다.


02. 후위 증감 연산자

a++ , a--
후위 증감 연산자는 연산자가 변수의 앞에 있고,
변수의 값을 먼저 사용하고, 그 이후 값을 증가시키거나 감소시킨다.



03. 코드 예시

1) 전위 증감 연산자

public static void main(String[] args) {  
    int a = 1;  
    int b = 0;  
  
    b = ++a; //a의 값을 먼저 증가시키고, 그 결과를 b에 대입  
    System.out.println("a = " + a + ", b = " +...
    </summary>
  

  </entry>

  
  <entry>
    <title>JAVA 문법 (2) - 변수 명명 규칙</title>
    <link href="http://localhost:4000/posts/JAVA-%EB%AC%B8%EB%B2%95-(2)-%EB%B3%80%EC%88%98-%EB%AA%85%EB%AA%85-%EA%B7%9C%EC%B9%99/" rel="alternate" type="text/html" title="JAVA 문법 (2) - 변수 명명 규칙" />
    <published>2024-03-11T00:00:00+09:00</published>
  
    <updated>2024-03-12T14:28:58+09:00</updated>
  
    <id>http://localhost:4000/posts/JAVA-%EB%AC%B8%EB%B2%95-(2)-%EB%B3%80%EC%88%98-%EB%AA%85%EB%AA%85-%EA%B7%9C%EC%B9%99/</id>
    <content src="http://localhost:4000/posts/JAVA-%EB%AC%B8%EB%B2%95-(2)-%EB%B3%80%EC%88%98-%EB%AA%85%EB%AA%85-%EA%B7%9C%EC%B9%99/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="Java" />
    
    <category term="Grammar" />
    
  

  
    <summary>
      





      🔎 변수(Variable)

01. 변수 명명 규칙


  자바에서 변수의 이름을 짓는데는 규칙과 관례가 있다.
	- 규칙은 필수
	- 관례는 선택
관례는 필수는 아니지만, 전세계 개발자가 해당 관례를 따르기 때문에 사실상 규칙이라고 생각해도 된다.



02. 규칙


  • 변수 이름은 숫자로 시작할 수 없다 (예: 1num, 1first)
• 변수 이름에는 공백이 들어갈 수 없다.
• 자바의 예약어를 변수 이름으로 사용할 수 없다.(예: int, class, public, static 등등)
• 변수 이름에는 영문자, 숫자, 달러 기호 또는 언더바(_) 만 사용할 수 있다.



03. 관례


  • 소문자로 시작하는 Camel Case ( 낙타 표기법 ) (예 : myName, randomN...
    </summary>
  

  </entry>

  
  <entry>
    <title>JAVA 문법 (1) - 변수 Variable</title>
    <link href="http://localhost:4000/posts/JAVA-%EB%AC%B8%EB%B2%95-(1)-%EB%B3%80%EC%88%98-Variable/" rel="alternate" type="text/html" title="JAVA 문법 (1) - 변수 Variable" />
    <published>2024-03-11T00:00:00+09:00</published>
  
    <updated>2024-03-11T17:50:08+09:00</updated>
  
    <id>http://localhost:4000/posts/JAVA-%EB%AC%B8%EB%B2%95-(1)-%EB%B3%80%EC%88%98-Variable/</id>
    <content src="http://localhost:4000/posts/JAVA-%EB%AC%B8%EB%B2%95-(1)-%EB%B3%80%EC%88%98-Variable/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="Java" />
    
    <category term="Grammar" />
    
  

  
    <summary>
      





      🔎 변수(Variable)

01. 변수란?


  변수(Variable)는 데이터를 저장하는 공간이다.
변수는 특정 데이터 타입을 가지며, 이 데이터 타입에 따라 저장할 수 있는 데이터의 종류와 크기가 결정된다. 변수를 사용하면 데이터를 보다 쉽게 관리할 수 있고, 코드 내에서 값을 재사용하거나 변경할 수 있다.



02. 왜 사용해야하나?
public class Var1 {  
    public static void main(String[] args) {  
        System.out.println(10);  
        System.out.println(10);  
        System.out.println(10);  
    }  
}

//10
//10
//10


위의 코...
    </summary>
  

  </entry>

  
  <entry>
    <title>mySQL 문법 (9) - UPDATE 데이터 수정하기</title>
    <link href="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(9)-UPDATE-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="mySQL 문법 (9) - UPDATE 데이터 수정하기" />
    <published>2024-03-08T00:00:00+09:00</published>
  
    <updated>2024-03-08T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(9)-UPDATE-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/</id>
    <content src="http://localhost:4000/posts/mySQL-%EB%AC%B8%EB%B2%95-(9)-UPDATE-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/" />
    <author>
      <name>yeahyun</name>
    </author>

  
    
    <category term="mySQL" />
    
    <category term="Grammarㅤ" />
    
  

  
    <summary>
      





      💡UPDATE

01. UPDATE


  The UPDATE statement is used to modify the existing records in a table.


UPDATE 는 테이블의 기존 데이터 값을 수정하는데 사용한다.

02. 주의사항


  반드시 WHERE절을 사용하여 특정 데이터만 수정하는데 사용하자. 그렇지 않으면 모든 기록이 업데이트 될 수 있기 때문..




💡문법 Syntax

01. 특정한 컬럼의 데이터값을 수정할 때

UPDATE 테이블명 SET 컬럼1 = '변경할 값' WHERE 조건1;



02. 여러개 컬럼의 데이터값을 수정할 때

UPDATE 테이블명 SET 컬럼1 = '변경할 값', 컬럼2 = '변경할 값' WHERE 조건1;




💡사용예시

0...
    </summary>
  

  </entry>

</feed>


