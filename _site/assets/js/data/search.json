[
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (22) - 등차수열의 특정한 항만 더하기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(22)-%EB%93%B1%EC%B0%A8%EC%88%98%EC%97%B4%EC%9D%98-%ED%8A%B9%EC%A0%95%ED%95%9C-%ED%95%AD%EB%A7%8C-%EB%8D%94%ED%95%98%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-27 00:00:00 +0900",
    





    
    "snippet": "01 문제 : 등차수열의 특정한 항만 더하기  문제 설명  두 정수 a, d와 길이가 n인 boolean 배열 included가 주어집니다. 첫째항이 a, 공차가 d인 등차수열에서 included[i]가 i + 1항을 의미할 때, 이 등차수열의 1항부터 n항까지 included가 true인 항들만 더한 값을 return 하는 solution 함수를 작...",
    "content": "01 문제 : 등차수열의 특정한 항만 더하기  문제 설명  두 정수 a, d와 길이가 n인 boolean 배열 included가 주어집니다. 첫째항이 a, 공차가 d인 등차수열에서 included[i]가 i + 1항을 의미할 때, 이 등차수열의 1항부터 n항까지 included가 true인 항들만 더한 값을 return 하는 solution 함수를 작성해 주세요.  제한사항  • 1 ≤ a ≤ 100• 1 ≤ d ≤ 100• 1 ≤ included의 길이 ≤ 100• included에는 true가 적어도 하나 존재합니다.  입출력 예            a      d      included      result                  3      4      [true, false, false, true, true]      37              7      1      [false, false, false, true, false, false, false]      10        입출력 예 설명입출력 예 #1  예제 1번은 a와 d가 각각 3, 4이고 included의 길이가 5입니다. 이를 표로 나타내면 다음과 같습니다.|          | 1항   | 2항    | 3항    | 4항   | 5항   || ——– | —- | —– | —– | —- | —- || 등차수열     | 3    | 7     | 11    | 15   | 19   || included | true | false | false | true | true |입출력 예 #2  예제 2번은 a와 d가 각각 7, 1이고 included의 길이가 7입니다. 이를 표로 나타내면 다음과 같습니다.|          | 1항    | 2항    | 3항    | 4항   | 5항    | 6항    | 7항    || ——– | —– | —– | —– | —- | —– | —– | —– || 등차수열     | 7     | 8     | 9     | 10   | 11    | 12    | 13    || included | false | false | false | true | false | false | false |  제시 코드def solution(a, d, included):\tresult = 0\treturn result02 풀이  1) 내가 푼 방법 -\b\bfor문과 형변환  해당 문제는 일정한 규칙을 찾으면 쉽게 풀 수 있다.먼저, 1항의 값이 3, 2항의 값이 7, 3항의 값이 11… 일때,컴퓨터는 배열의 항을 0부터 세기 때문에 해당 문제를 0항의 값이 3, 1항의 값이 7, 3항의 값이 11… 로 생각해 볼 수 있다.  그렇다면, a + d * 인덱스 로 문제를 해결할 수 있으므로, 아래와 같이 코드를 작성하였다.answer = 0for i in range(len(included)) :\tanswer += (a + d * i)  이어서, false인 부분의 값은 제외를 해야하니, 곱하기 연산자로 이를 처리하였다.int(included[i]) 는 true일 경우 1을, false일 경우 0 를 반환하므로, false 일때 0을 곱해주어, answer 변수에 0 값을 추가하게 하였다.    answer = 0        for i in range(len(included)) :        answer += (a + d * i) * int(included[i])03 Answer  1) 내가 푼 방법 -\bfor문과 형변환def solution(a, d, included):\tanswer = 0        for i in range(len(included)) :        answer += (a + d * i) * int(included[i])            return answer    # \b\"acbac\"해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (21) - 코드 처리하기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(21)-%EC%BD%94%EB%93%9C-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-27 00:00:00 +0900",
    





    
    "snippet": "01 문제 : 코드 처리하기  문제 설명  문자열 code가 주어집니다.code를 앞에서부터 읽으면서 만약 문자가 “1”이면 mode를 바꿉니다. mode에 따라 code를 읽어가면서 문자열 ret을 만들어냅니다.mode는 0과 1이 있으며, idx를 0 부터 code의 길이 - 1 까지 1씩 키워나가면서 code[idx]의 값에 따라 다음과 같이 행...",
    "content": "01 문제 : 코드 처리하기  문제 설명  문자열 code가 주어집니다.code를 앞에서부터 읽으면서 만약 문자가 “1”이면 mode를 바꿉니다. mode에 따라 code를 읽어가면서 문자열 ret을 만들어냅니다.mode는 0과 1이 있으며, idx를 0 부터 code의 길이 - 1 까지 1씩 키워나가면서 code[idx]의 값에 따라 다음과 같이 행동합니다.• mode가 0일 때 ⸰ code[idx]가 “1”이 아니면 idx가 짝수일 때만 ret의 맨 뒤에 code[idx]를 추가합니다. ⸰ code[idx]가 “1”이면 mode를 0에서 1로 바꿉니다.• mode가 1일 때 ⸰ code[idx]가 “1”이 아니면 idx가 홀수일 때만 ret의 맨 뒤에 code[idx]를 추가합니다. ⸰ code[idx]가 “1”이면 mode를 1에서 0으로 바꿉니다.문자열 code를 통해 만들어진 문자열 ret를 return 하는 solution 함수를 완성해 주세요.단, 시작할 때 mode는 0이며, return 하려는 ret가 만약 빈 문자열이라면 대신 “EMPTY”를 return 합니다.  제한사항  • 1 ≤ code의 길이 ≤ 100,000 ⸰ code는 알파벳 소문자 또는 “1”로 이루어진 문자열입니다.  입출력 예            code      result                  “abc1abc1abc”      “acbac”        입출력 예 설명입출력 예 #1  code의 각 인덱스 i에 따라 다음과 같이 mode와 ret가 변합니다.            i      code[i]      mode      ret                  0      “a”      0      “a”              1      “b”      0      “a”              2      “c”      0      “ac”              3      “1”      1      “ac”              4      “a”      1      “ac”              5      “b”      1      “acb”              6      “c”      1      “acb”              7      “1”      0      “acb”              8      “a”      0      “acba”              9      “b”      0      “acba”              10      “c”      0      “acbac”        제시 코드def solution(code):    answer = ''    return answer02 풀이  1) 내가 푼 방법 -\b\bfor문과 조건문 활용하기  해당 문제는 복잡해 보이지만, 문제를 천천히 읽으며 조건 하나씩 읽어가며 코드를 작성하니 쉬운 문제였다. 먼저 mode와 ret이라는 변수를 생성하고, for문으로 code의 요소 개수 만큼 코드를 실행 시켰다.mode = 0ret = ''for i in range(len(code)) :  그 후 mode 가 0일 때 와 mode 가 1 일 때 의 조건으로 분리해 주었다.mode = 0ret = ''for i in range(len(code)) :\tif mode == 0 :\telse :  mode에 관한 조건문에 code[idx] 값이 1이 아닌경우를 추가해 주었다.mode = 0ret = ''for i in range(len(code)) :\tif mode == 0 :\t\tif code[i] != '1' :\t\telse :\telse :\t\tif code[i] != '1' :\t\telse :  마지막으로, ret에 결과값을 추가해 주고, mode를 조건에 따라 1, 0 으로 변경해 주었다.mode = 0ret = ''for i in range(len(code)) :\tif mode == 0 :\t\tif code[i] != '1' :\t\t\tif i % 2 == 0 :\t\t\t\tret += code[i]\t\telse :\t\t\tmode = 1\t\t\t\telse : \t\tif code[i] != '1' :\t\t\tif i % 2 == 1 :\t\t\t\tret += code[i]\t\telse :\t\t\tmode = 003 Answer  1) 내가 푼 방법 -\b삼항 연산자def solution(code):    mode = 0    ret = ''        for i in range(len(code)) :        if mode == 0 :            if code[i] != '1' :                if i % 2 == 0 :                    ret += code[i]            else :                mode = 1                        else :             if code[i] != '1' :                if i % 2 == 1 :                    ret += code[i]            else :                mode = 0                                            return 'EMPTY' if ret == '' else ret    # \b\"acbac\"해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (20) - flag에 따라 다른 값 반환하기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(20)-flag%EC%97%90-%EB%94%B0%EB%9D%BC-%EB%8B%A4%EB%A5%B8-%EA%B0%92-%EB%B0%98%ED%99%98%ED%95%98%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-26 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\bflag에 따라 다른 값 반환하기  문제 설명  두 정수 a, b와 boolean 변수 flag가 매개변수로 주어질 때, flag가 true면 a + b를 false면a - b를 return 하는 solution 함수를 작성해 주세요.  제한사항  • 1,000 ≤ a, b ≤ 1,000  입출력 예            a      b ...",
    "content": "01 문제 :\bflag에 따라 다른 값 반환하기  문제 설명  두 정수 a, b와 boolean 변수 flag가 매개변수로 주어질 때, flag가 true면 a + b를 false면a - b를 return 하는 solution 함수를 작성해 주세요.  제한사항  • 1,000 ≤ a, b ≤ 1,000  입출력 예            a      b      flag      result                  -4      7      true      3              -4      7      false      -11        입출력 예 설명입출력 예 #1  예제 1번에서 flag가 true이므로 a + b = (-4) + 7 = 3을 return 합니다.입출력 예 #2  예제 2번에서 flag가 false이므로 a - b = (-4) - 7 = -11을 return 합니다.  제시 코드def solution(a, b, flag):    answer = 1    return answer02 풀이  1) 내가 푼 방법 -\b\b삼항 연산자  해당 문제는 삼항연산자로, flag가 true면, a + b를, false 면 a - b를 반환하면 된다.a + b if flag else a - b03 Answer  1) 내가 푼 방법 -\b삼항 연산자def solution(a, b, flag):        return a + b if flag else a - b\t# \b3해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (19) - 조건 문자열",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(19)-%EC%A1%B0%EA%B1%B4-%EB%AC%B8%EC%9E%90%EC%97%B4/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-26 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\b조건 문자열  문제 설명  문자열에 따라 다음과 같이 두 수의 크기를 비교하려고 합니다.• 두 수가 n과 m이라면 ⸰ “&gt;”, “=” : n &gt;= m ⸰ “&lt;”, “=” : n &lt;= m ⸰ “&gt;”, “!” : n &gt; m ⸰ “&lt;”, “!” : n &lt; m두 문자열 ineq와 eq가 주어집니다. i...",
    "content": "01 문제 :\b조건 문자열  문제 설명  문자열에 따라 다음과 같이 두 수의 크기를 비교하려고 합니다.• 두 수가 n과 m이라면 ⸰ “&gt;”, “=” : n &gt;= m ⸰ “&lt;”, “=” : n &lt;= m ⸰ “&gt;”, “!” : n &gt; m ⸰ “&lt;”, “!” : n &lt; m두 문자열 ineq와 eq가 주어집니다. ineq는 “&lt;”와 “&gt;”중 하나고, eq는 “=”와 “!”중 하나입니다. 그리고 두 정수 n과 m이 주어질 때, n과 m이 ineq와 eq의 조건에 맞으면 1을 아니면 0을 return하도록 solution 함수를 완성해주세요.  제한사항  • 1 ≤ n ≤ 100  입출력 예            ineq      eq      n      m      result                  ”&lt;”      ”=”      20      50      1              ”&gt;”      ”!”      41      78      0        입출력 예 설명입출력 예 #1  20 &lt;= 50은 참이기 때문에 1을 return합니다.입출력 예 #2  41 &gt; 78은 거짓이기 때문에 0을 return합니다.  제시 코드def solution(ineq, eq, n, m):    answer = 0    return answer02 풀이  1) 내가 푼 방법 -\b조건문 활용하기  먼저, eq 가 !의 값을 가지고 있는지 없는지를 가장 큰 조건으로 걸어주었다.if eq != \"!\" :else :  이어서, ineq 의 값에 따라 결과값을 리턴해주었다.    if eq != \"!\" :        if ineq == \"&gt;\":            return int(n &gt;= m)        else :            return int(n &lt;= m)    else :        if ineq == \"&gt;\":            return int(n &gt; m)        else :            return int(n &lt; m)  2) 다른 사람이 푼 방법 - f-string 과 eval() 활용하기  해당 문제를 eval()로 해결한 사람들을 보았다.새삼 대단한 사람들이 많다고 생각이 들었다. 나는 이렇게 생각해본적이 없었기 때문이다..  eval() : 파이썬 표현식을 평가하고 실행한 결과를 반환하는 내장 함수이며 동적으로 파이썬 코드를 실행한다. 문자열로 들어온 표현식을 계산해주는 엄청난 녀석..  아래와 같이 사용할 수 있다.먼저, 문자열로 표현식을 작성해준다.f\"{n}{ineq}{eq}.replace(\"!\", \"\")\"# 20&lt;=50# 41&gt;78  이후 eval()로 감싸주면, true와 false로 반환이 된다.eval(f\"{n}{ineq}{eq}{m}\".replace(\"!\", \"\"))# 20&lt;=50 // true# 41&gt;78 // false  리턴해야할 값이 true 일 때 1 , false 일 때 0 을 반환하므로, int로 형변환을 해준면 끝난다.int(eval(f\"{n}{ineq}{eq}{m}\".replace(\"!\", \"\")))# 20&lt;=50 // true // 1# 41&gt;78 // false // 003 Answer  1) 내가 푼 방법 -\b조건문 활용하기def solution(ineq, eq, n, m):    if eq != \"!\" :        if ineq == \"&gt;\":            return int(n &gt;= m)        else :            return int(n &lt;= m)    else :        if ineq == \"&gt;\":            return int(n &gt; m)        else :            return int(n &lt; m)\t# \b1  2) 다른 사람이 푼 방법 -\bf-string 과 eval() 활용하기def solution(n):\treturn int(eval(f\"{n}{ineq}{eq}{m}\".replace(\"!\", \"\")))\t# \b1해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (18) - 홀짝에 따라 다른 값 반환하기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(18)-%ED%99%80%EC%A7%9D%EC%97%90-%EB%94%B0%EB%9D%BC-%EB%8B%A4%EB%A5%B8-%EA%B0%92-%EB%B0%98%ED%99%98%ED%95%98%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-26 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\b홀짝에 따라 다른 값 반환하기  문제 설명  양의 정수 n이 매개변수로 주어질 때, n이 홀수라면 n 이하의 홀수인 모든 양의 정수의 합을 return 하고 n이 짝수라면 n 이하의 짝수인 모든 양의 정수의 제곱의 합을 return 하는 solution 함수를 작성해 주세요.  제한사항  • 1 ≤ n ≤ 100  입출력 예       ...",
    "content": "01 문제 :\b홀짝에 따라 다른 값 반환하기  문제 설명  양의 정수 n이 매개변수로 주어질 때, n이 홀수라면 n 이하의 홀수인 모든 양의 정수의 합을 return 하고 n이 짝수라면 n 이하의 짝수인 모든 양의 정수의 제곱의 합을 return 하는 solution 함수를 작성해 주세요.  제한사항  • 1 ≤ n ≤ 100  입출력 예            n      result                  7      16              10      220        입출력 예 설명입출력 예 #1  예제 1번의 n은 7로 홀수입니다. 7 이하의 모든 양의 홀수는 1, 3, 5, 7이고 이들의 합인 1 + 3 + 5 + 7 = 16을 return 합니다.입출력 예 #2  예제 2번의 n은 10으로 짝수입니다. 10 이하의 모든 양의 짝수는 2, 4, 6, 8, 10이고 이들의 제곱의 합인 22 + 42 + 62 + 82 + 102 = 4 + 16 + 36 + 64 + 100 = 220을 return 합니다.  제시 코드def solution(n):    answer = 0    return answer02 풀이  1) 내가 푼 방법 -\bfor문과 조건문 활용하기  지금까지 swift와 java로 문제를 풀어온 나는 아래와 같은 방법으로 문제를 해결하였다.먼저, for문으로 1~n의 숫자를 차례대로 i에 넣어주었다.여기서 range(n+1)에 +1을 해주는 이유는, range()는 인덱스 형식으로 값을 반환해주기 때문에 1부터가 아닌 0부터 시작하기 때문이다.answer = 0for i in range(n + 1) :\tprint(i)\t# 1# 2# 3# 4# 5# 6# 7  이어서, n이 홀수일 경우와 짝수인 경우를 조건문을 통해 나누어 주었다.answer = 0for i in range(n + 1) :\tif n % 2 == 1 :\t\t# n이 홀수인 경우 코드 실행\t\t# i가 1 3 5 7 값이 들어옴\telse :\t\t# n이 짝수인 경우 코드 실행\t\t# i가 2 4 6 8 값이 들어옴  i가 홀수인 경우와 짝수인 경우를 조건문을 통해 한번 더 나누어 주었다.answer = 0for i in range(n + 1) :\tif n % 2 == 1 :\t\t# n이 홀수인 경우 코드 실행\t\tif i % 2 == 1 :\t\t\t# i가 1 3 5 7 값이 들어옴\telse :\t\t# n이 짝수인 경우 코드 실행\t\tif i % 2 == 0 :\t\t\t# i가 2 4 6 값이 들어옴  마지막으로 i와 n이 모두 홀수일 때의 i의 값을 변수 answer에 더해주고,나머지 경우는 i의 제곱값을 answer에 더해주었다.answer = 0for i in range(n+1) :\t\tif n % 2 == 1 :\t\tif i % 2 == 1 :\t\t\tanswer += i\telse :\t\tif i % 2 == 0:\t\t\tanswer += i * i\t\t\treturn answer  2) 다른 사람이 푼 방법 -\bsum()과 range() 활용하기  이 방법은 코드의 가독성이 더 좋아보였고, 변수를 생성하지 않아도 돼서 앞으로 많이 응용할 것 같아 블로그에 기록했다.  sum() : 모든 값을 더해준다. int일 경우에만 사용가능range('시작값', '끝값'\u001d, '간격';) : 파라미터를 활용하여 더 크게 활용가능if n % 2 == 1 :\treturn sum(range(1, n+1, 2))else :\treturn sum([i*i for i in range(2, n+1, 2)])03 Answer  1) 내가 푼 방법 -\bfor문과 조건문 활용하기def solution(n):    answer = 0\tfor i in range(n+1) :\t\t\t\tif n % 2 == 1 :\t\t\tif i % 2 == 1 :\t\t\t\tanswer += i\t\telse :\t\t\tif i % 2 == 0:\t\t\t\tanswer += i * i\t\t\t\t\treturn answer\t# \b220  2) 다른 사람이 푼 방법 -\bsum()과 range() 활용하기def solution(n):\tif n % 2 == 1 :\t\treturn sum(range(1, n+1, 2))\telse :\t\treturn sum([i*i for i in range(2, n+1, 2)])\t\t# \b220해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (17) - 공배수",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(17)-%EA%B3%B5%EB%B0%B0%EC%88%98/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-26 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\bn의 배수  문제 설명  정수 number와 n, m이 주어집니다. number가 n의 배수이면서 m의 배수이면 1을 아니라면 0을 return하도록 solution 함수를 완성해주세요.  제한사항  • 10 ≤ number ≤ 100• 2 ≤ n, m &lt; 10  입출력 예            number      n      m ...",
    "content": "01 문제 :\bn의 배수  문제 설명  정수 number와 n, m이 주어집니다. number가 n의 배수이면서 m의 배수이면 1을 아니라면 0을 return하도록 solution 함수를 완성해주세요.  제한사항  • 10 ≤ number ≤ 100• 2 ≤ n, m &lt; 10  입출력 예            number      n      m      result                  60      2      3      1              55      10      5      0        입출력 예 설명입출력 예 #1  60은 2의 배수이면서 3의 배수이기 때문에 1을 return합니다.입출력 예 #2  55는 5의 배수이지만 10의 배수가 아니기 때문에 0을 return합니다.  제시 코드def solution(number, n, m):\tanswer = 0\treturn answer02 풀이  1) 내가 푼 방법 -\b삼항연산자와 논리연산자  논리 연산자를 통해 조건 두개가 모두 true일 때 1을, false일 때 2를 반환하면 된다.n과 m의 배수이기 위해서는 number 을 n과 m 으로 나누었을때 나머지가 0 이면 된다.1 if number % n == 0 and number % m == 0 else 0# 조건 두개가 true 일 때 1 을, # 둘중 하나라도 false 면 2를 반환  2) 내가 푼 방법 -\bbool -&gt; int로 형변환하기  이 방법은 내가 심심해서 정답을 활용해 보았다.현업에서는 좋은 방법이 아닐 것 같다. 그 이유는 형변환은 데이터의 타입을 변경시키는데 목적이 있지, 형변환을 통한 정답을 도출하는데 있지 않기 때문이다.  true : 1false : 0int(number % n == 0 and number % m == 0)# bool 타입을 int 타입으로 전환03 Answer  1) 내가 푼 방법 -\b삼항연산자와 논리연산자def solution(num, n):        return 1 if number % n == 0 and number % m == 0 else 0    # \b991  2) 내가 푼 방법 - bool-&gt;int 형변환def solution(num, n):        return int(number % n == 0 and number % m == 0)    # \b991해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (16) - n의 배수",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(16)-n%EC%9D%98-%EB%B0%B0%EC%88%98/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-26 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\bn의 배수  문제 설명  정수 num과 n이 매개 변수로 주어질 때, num이 n의 배수이면 1을 return n의 배수가 아니라면 0을 return하도록 solution 함수를 완성해주세요.  제한사항  • 2 ≤ num ≤ 100• 2 ≤ n ≤ 9  입출력 예            num      n      result       ...",
    "content": "01 문제 :\bn의 배수  문제 설명  정수 num과 n이 매개 변수로 주어질 때, num이 n의 배수이면 1을 return n의 배수가 아니라면 0을 return하도록 solution 함수를 완성해주세요.  제한사항  • 2 ≤ num ≤ 100• 2 ≤ n ≤ 9  입출력 예            num      n      result                  98      2      1              34      3      0        입출력 예 설명입출력 예 #1  98은 2의 배수이므로 1을 return합니다.입출력 예 #2  32는 3의 배수가 아니므로 0을 return합니다.  제시 코드def solution(num, n):\tanswer = 0\treturn anwer02 풀이  1) 내가 푼 방법 -\b삼항연산자와 나머지 연산자  삼항 연산자를 통해 한줄로 문제를 해결할 수 있었다.n의 배수이기 위해서는 num 을 n으로 나누었을때 나머지가 0 이면 된다.1 if num % 0 == 0 else 0# 1  2) 내가 푼 방법 -\bbool -&gt; int로 형변환하기  이 방법은 내가 심심해서 정답을 활용해 보았다.현업에서는 좋은 방법이 아닐 것 같다. 그 이유는 형변환은 데이터의 타입을 변경시키는데 목적이 있지, 형변환을 통한 정답을 도출하는데 있지 않기 때문이다.  true : 1false : 0int(num % n == 0)# bool 타입을 int 타입으로 전환03 Answer  1) 내가 푼 방법 -\b삼항연산자def solution(num, n):        return 1 if num % 0 == 0 else 0    # \b991  2) 내가 푼 방법 - bool-&gt;int 형변환def solution(num, n):        return int(num % n == 0)    # \b991해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (15) - 두 수의 연산값 비교하기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(15)-%EB%91%90-%EC%88%98%EC%9D%98-%EC%97%B0%EC%82%B0%EA%B0%92-%EB%B9%84%EA%B5%90%ED%95%98%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-26 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\b두 수의 연산값 비교하기  문제 설명  연산 ⊕는 두 정수에 대한 연산으로 두 정수를 붙여서 쓴 값을 반환합니다. 예를 들면 다음과 같습니다.• 12 ⊕ 3 = 123• 3 ⊕ 12 = 312양의 정수 a와 b가 주어졌을 때, a ⊕ b와 2 * a * b 중 더 큰 값을 return하는 solution 함수를 완성해 주세요.  단, a...",
    "content": "01 문제 :\b두 수의 연산값 비교하기  문제 설명  연산 ⊕는 두 정수에 대한 연산으로 두 정수를 붙여서 쓴 값을 반환합니다. 예를 들면 다음과 같습니다.• 12 ⊕ 3 = 123• 3 ⊕ 12 = 312양의 정수 a와 b가 주어졌을 때, a ⊕ b와 2 * a * b 중 더 큰 값을 return하는 solution 함수를 완성해 주세요.  단, a ⊕ b와 2 * a * b가 같으면 a ⊕ b를 return 합니다.  제한사항  • 1 ≤ a, b &lt; 10,000  입출력 예            a      b      result                  2      91      364              91      2      912        입출력 예 설명입출력 예 #1  a ⊕ b = 291 이고, 2 * a * b = 364 입니다. 둘 중 더 큰 값은 364 이므로 364를 return 합니다.입출력 예 #2  a ⊕ b = 912 이고, 2 * a * b = 364 입니다. 둘 중 더 큰 값은 912 이므로 912를 return 합니다.  제시 코드def solution(a, b):\tanswer = 0\treturn answer02 풀이  1) 내가 푼 방법 -\bf-string, max() 활용하기  기초(14) - 더 크게 합치기 에서 배운 f-string을 통해 문제를 해결했다.먼저, a 와 b 를 붙이고 int로 형변환을 해주었다.\bint(f\"{a}{b}\")# 291  max()를 통해 a ⊕ b와 2 * a * b 중 큰값을 리턴해주면 끝이다.max(int(f\"{a}{b}\"), 2*a*b)# 36403 Answer  1) 내가 푼 방법 -\bf-string, max() 활용하기def solution(a, b):    return max(int(f\"{a}{b}\"), 2*a*b)    # \b991해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (14) - 더 크게 합치기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(14)-%EB%8D%94-%ED%81%AC%EA%B2%8C-%ED%95%A9%EC%B9%98%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-26 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\b문자열 곱하기  문제 설명  연산 ⊕는 두 정수에 대한 연산으로 두 정수를 붙여서 쓴 값을 반환합니다. 예를 들면 다음과 같습니다.• 12 ⊕ 3 = 123• 3 ⊕ 12 = 312양의 정수 a와 b가 주어졌을 때, a ⊕ b와 b ⊕ a 중더 큰 값을 return 하는 solution 함수를 완성해 주세요.  단, a ⊕ b와 b ⊕ ...",
    "content": "01 문제 :\b문자열 곱하기  문제 설명  연산 ⊕는 두 정수에 대한 연산으로 두 정수를 붙여서 쓴 값을 반환합니다. 예를 들면 다음과 같습니다.• 12 ⊕ 3 = 123• 3 ⊕ 12 = 312양의 정수 a와 b가 주어졌을 때, a ⊕ b와 b ⊕ a 중더 큰 값을 return 하는 solution 함수를 완성해 주세요.  단, a ⊕ b와 b ⊕ a가 같다면 a ⊕ b를 return 합니다.  제한사항  • 1 ≤ a, b &lt; 10,000  입출력 예            a      b      result                  9      91      991              89      8      898        입출력 예 설명입출력 예 #1  a ⊕ b = 991 이고, b ⊕ a = 919 입니다. 둘 중 더 큰 값은 991 이므로 991을 return 합니다.입출력 예 #2  a ⊕ b = 898 이고, b ⊕ a = 889 입니다. 둘 중 더 큰 값은 898 이므로 898을 return 합니다.  제시 코드def solution(a, b):\tanswer = 0\treturn answer02 풀이  1) 내가 푼 방법 -\bmax(), 형변환  제시된 예시에 12 ⊕ 3 = 123라는 것은 두개의 숫자를 붙인 것과 같다.그렇다면 문자1 + 문자2 = 문자1문자2 가 되는것을 활용하여 코드를 작성했다.str(a) + str(b)# 123  a ⊕ b 를 작성했으니, 이어서 b ⊕ a 도 작성해 주었다.str(a) + str(b)str(b) + str(a)# 123# 312  이후, 생성한 문자열 두개를 정수로 비교를 해야하니 int()로 형변환을 해주었다.int(str(a) + str(b))int(str(b) + str(a))# 123# 312  마지막으로 두개의 값을 max()를 활용하여 더 큰수를 출력해주면 된다.max(비교할 값 1, 비교할 값 2) 으로 사용할 수 있다.max(int(str(a) + str(b)), int(str(b) + str(a)))# 312  2) 다른 사람이 푼 방법 - \bf-string, max() 활용하기  \b더 가독성이 좋은 방법 같다.. 정말 공부를 더해야함을 느낌..f-string 으로 내가 푼 방법처럼 형변환을 하나씩 해줄 필요가 없다.int(max(f\"{a}{b}\", f\"{b}{a}\"))# 31203 Answer  1) 내가 푼 방법 -\bmax(), 형변환def solution(a, b):    return max(int(str(a) + str(b)), int(str(b) + str(a)))    # \b991  2) 다른 사람이 푼 방법 -\bf-string, max() 활용하기def solution(a, b):    return int(max(f\"{a}{b}\", f\"{b}{a}\"    # \b991해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (13) - 문자열 곱하기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(13)-%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B3%B1%ED%95%98%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-26 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\b문자열 곱하기  문제 설명  문자열 my_string과 정수 k가 주어질 때, my_string을 k번 반복한 문자열을 return 하는 solution 함수를 작성해 주세요.  제한사항  • 1 ≤ my_string의 길이 ≤ 100• my_string은 영소문자로만 이루어져 있습니다.• 1 ≤ k ≤ 100  입출력 예        ...",
    "content": "01 문제 :\b문자열 곱하기  문제 설명  문자열 my_string과 정수 k가 주어질 때, my_string을 k번 반복한 문자열을 return 하는 solution 함수를 작성해 주세요.  제한사항  • 1 ≤ my_string의 길이 ≤ 100• my_string은 영소문자로만 이루어져 있습니다.• 1 ≤ k ≤ 100  입출력 예            my_string      k      result                  “string”      3      “stringstringstring”              “love”      10      “lovelovelovelovelovelovelovelovelovelove”        입출력 예 설명입출력 예 #1  예제 1번의 my_string은 “string”이고 이를 3번 반복한 문자열은 “stringstringstring”이므로 이를 return 합니다.입출력 예 #2  예제 2번의 my_string은 “love”이고 이를 10번 반복한 문자열은 “lovelovelovelovelovelovelovelovelovelove”이므로 이를 return 합니다.  제시 코드def solution(my_string, k):\tanswer = ''\treturn answer02 풀이  1) 내가 푼 방법 - \b문자열 연산하기  문자 * 숫자 = 문자타입 을 활용하여 문제를 해결했다.my_string = 'string'print(my_string * k)# stringstringstringstringstring03 Answer  1) 내가 푼 방법 - \b문자열 연산하기def solution(my_string, k):    return my_string * k    # \bstringstringstringstring해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (12) - 문자 리스트를 문자열로 변환하기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(12)-%EB%AC%B8%EC%9E%90-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EB%AC%B8%EC%9E%90%EC%97%B4%EB%A1%9C-%EB%B3%80%ED%99%98%ED%95%98%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-26 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\b문자 리스트를 문자열로 변환하기  문제 설명  문자들이 담겨있는 배열 arr가 주어집니다.  arr의 원소들을 순서대로 이어 붙인 문자열을 return 하는 solution함수를 작성해 주세요.  제한사항  • 1 ≤ arr의 길이 ≤ 200• arr의 원소는 전부 알파벳 소문자로 이루어진 길이가 1인 문자열입니다.  입출력 예     ...",
    "content": "01 문제 :\b문자 리스트를 문자열로 변환하기  문제 설명  문자들이 담겨있는 배열 arr가 주어집니다.  arr의 원소들을 순서대로 이어 붙인 문자열을 return 하는 solution함수를 작성해 주세요.  제한사항  • 1 ≤ arr의 길이 ≤ 200• arr의 원소는 전부 알파벳 소문자로 이루어진 길이가 1인 문자열입니다.  입출력 예            arr      result                  [“a”,”b”,”c”]      “abc”        제시 코드def solution(arr):    answer = ''\treturn answer02 풀이  1) 내가 푼 방법 - \bfor문 활용하기  arr 배열 요소들을 for문을 통해 하나씩 새로운 변수에 추가해 주었다.result = ''for i in arr:    result += ireturn answer  2) 다른사람이 푼 방법 -\bjoin()을 활용하기  \b다른사람의 풀이를 보며 join() 이라는걸 알게되었다.join() 함수는 매개변수로 들어온 리스트에 있는 요소들을 합쳐서 하나의 문자열로 바꾸어 변환해준다.이 방법으로 풀면 새로운 변수를 생성하지 않아도 돼서 유용하게 사용할 수 있다고 생각이 되었다.  '구분자'.join(리스트) 로 사용할 수 있고, 구분자의 문자가 리스트 중간중간에 추가되어 출력이 된다.print('_'.join(arr))# a_b_c  그렇다면 우리는 새로운 문자를 추가하는게 아닌 arr의 요소들을 하나의 문자열로 만들어줘야 하기 때문에 구분자에 빈 문자를 넣어주면 된다.''.join(arr)# abc03 Answer  1) 내가 푼 방법 - \bfor문 활용def solution(str1, str2):answer = ''    for i in arr:      answer += ireturn answer# \babc  2) 다른사람이 푼 방법 - \bjoin()def solution(str1, str2):    return ''.join(arr)    # \babc해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (11) - 문자열 섞기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(11)-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%84%9E%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-26 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\b문자열 섞기  문제 설명  길이가 같은 두 문자열 str1과 str2가 주어집니다.두 문자열의 각 문자가 앞에서부터 서로 번갈아가면서 한 번씩 등장하는 문자열을 만들어 return 하는 solution 함수를 완성해 주세요.  제한사항  • 1 ≤ str1의 길이 = str2의 길이 ≤ 10• str1과 str2는 알파벳 소문자로 이루어...",
    "content": "01 문제 :\b문자열 섞기  문제 설명  길이가 같은 두 문자열 str1과 str2가 주어집니다.두 문자열의 각 문자가 앞에서부터 서로 번갈아가면서 한 번씩 등장하는 문자열을 만들어 return 하는 solution 함수를 완성해 주세요.  제한사항  • 1 ≤ str1의 길이 = str2의 길이 ≤ 10• str1과 str2는 알파벳 소문자로 이루어진 문자열입니다.  입출력 예            str1      str2      result                  “aaaaa”      “bbbbb”      “ababababab”        제시 코드def solution(str1, str2):02 풀이  1) 내가 푼 방법 - \bfor문 활용하기  str1 과 str2 의 길이가 같다는 점을 활용하여, for문을 통해 문제를 해결할 수 있었다.먼저, 정답을 담을 빈 문자열 변수를 생성해주었다.result = \"\"  그 후, str1 혹은 str2 의 길이가 같으니, 둘 중 하나의 길이값만큼 반복문을 돌려주었다.result = \"\"for i in range(len(str1)) :  마지막으로 첫 번째로 str1[j] 값을, 두번째로 str2[i] 값을 생성한 변수 result 에 더해주었다.result = \"\"for i in range(len(str1)):\tresult += str1[i] + str2[i]  2) 다른사람이 푼 방법 -\bfor문과 zip() 활용하기  \b다른사람의 풀이를 보며 zip() 이라는걸 알게되었다.zip()은 두개의 리스트를 호출한 후, for문을 사용하여 반환된 튜플을 차례대로 출력해준다.result = \"\"for i in zip(str1, str2) :\tprint(i)# ('a', 'b')# ('a', 'b')# ('a', 'b')# ('a', 'b')# ('a', 'b')  그럼 for문을 통해 처음으로 출력되는 값을 두개의 인자에서 받으면?첫 번째 인자 s1이 str1[0] 값을, 두 번째 인자 s2가 str2[0]의 값을 가지게 된다.result = \"\"for s1, s2 in zip(str1, str2) :\tprint(s1)\tprint(s2)# a# b# a# b# ...  \b이를 활용하여, result 변수에 s1과 s2의 값을 담아주면 된다.result = \"\"for s1, s2 in zip(str1, str2):      result += s1 + s203 Answer  1) 내가 푼 방법 - \bfor문 활용def solution(str1, str2):    result = \"\"        for i in range(len(str1)):        result += str1[i] + str2[i]    return result    # \bababababab  2) 다른사람이 푼 방법 - \bfor문과 zip() 활용하기def solution(str1, str2):    result = \"\"        for i in range(len(str1)):        result += str1[i] + str2[i]    return result    # \bababababab해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (10) - 문자열 겹쳐쓰기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(10)-%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B2%B9%EC%B3%90%EC%93%B0%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-26 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\b문자열 겹쳐쓰기  문제 설명  문자열 my_string, overwrite_string과 정수 s가 주어집니다. 문자열 my_string의 인덱스 s부터 overwrite_string의 길이만큼을 문자열 overwrite_string으로 바꾼 문자열을 return 하는 solution 함수를 작성해 주세요.  제한사항  • my_stri...",
    "content": "01 문제 :\b문자열 겹쳐쓰기  문제 설명  문자열 my_string, overwrite_string과 정수 s가 주어집니다. 문자열 my_string의 인덱스 s부터 overwrite_string의 길이만큼을 문자열 overwrite_string으로 바꾼 문자열을 return 하는 solution 함수를 작성해 주세요.  제한사항  • my_string와 overwrite_string은 숫자와 알파벳으로 이루어져 있습니다.• 1 ≤ overwrite_string의 길이 ≤ my_string의 길이 ≤ 1,000• 0 ≤ s ≤ my_string의 길이 - overwrite_string의 길이  입출력 예            my_string      overwrite_string      s      result                  “He11oWor1d”      “lloWorl”      2      “HelloWorld”              “Program29b8UYP”      “merS123”      7      “ProgrammerS123”        제시 코드def solution(my_string, overwrite_string, s):02 풀이  1) 내가 푼 방법 - \b배열 슬라이싱  \b\b파이썬에서는 배열을 슬라이싱을 할때 슬라이싱을 시작 및 끝낼 인덱스 값과 콜론(:)을 활용한다.• array[:2] 0~2까지의 요소• array[2:] 2~마지막 요소  위를 활용하여, 먼저 필요로 하는 my_string에서 2번째 요소까지의 값을 가져왔다.my_string[:2]# He  그 후, overwrite_string의 문자열과 하나로 합쳐주었다.my_string[:s] + overwrite_string# He + lloWorl  마지막으로, my_string에서 overwrite_string의 길이 + n의 값을 더한 값을my_string의 해당 인덱스 부터 마지막 요소까지 구해준 값을 합하였다.my_string[:s] + overwrite_string + my_string[s + len(overwrite_string) :]# He + lloWorl + d# 따라서 HelloWorld 가 출력된다.03 Answer  1) 내가 푼 방법 - \b배열 슬라이싱def solution(my_string, overwrite_string, s):        return my_string[:s] + overwrite_string + my_string[s + len(overwrite_string) :]# HelloWorld해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (09) - 홀짝 구분하기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(09)-%ED%99%80%EC%A7%9D-%EA%B5%AC%EB%B6%84%ED%95%98%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-25 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\b홀짝 구분하기  문제 설명  자연수 n이 입력으로 주어졌을 때 만약 n이 짝수이면 “n is even”을, 홀수이면 “n is odd”를 출력하는 코드를 작성해 보세요.  제한사항  • 1 ≤ n ≤ 1,000  입출력 예입력 #1100출력 #1100 is even  제시 코드a = int(input())02 풀이  1) 내가 푼 방법 ...",
    "content": "01 문제 :\b홀짝 구분하기  문제 설명  자연수 n이 입력으로 주어졌을 때 만약 n이 짝수이면 “n is even”을, 홀수이면 “n is odd”를 출력하는 코드를 작성해 보세요.  제한사항  • 1 ≤ n ≤ 1,000  입출력 예입력 #1100출력 #1100 is even  제시 코드a = int(input())02 풀이  1) 내가 푼 방법 - \bf-string / 삼항연산자 활용하기  \b삼항 연산자를 통해, n이 짝수면 n is even / n이 홀수면 n is odd를 출력시켰다.print(f\"{a} is even\" if a % 2 == 0 else f\"{a} is odd\")  2) 내가 푼 방법 - \b조건문과 콤마를 활용하기  \b조건문을 통해, n이 짝수면 n is even / n이 홀수면 n is odd를 출력시켰다.if a % 2 == 0 :    print( a, 'is even')else :    print( a, 'is odd')03 Answer  1) 내가 푼 방법 - \bf-string / 삼항연산자 활용하기a = int(input())print(f\"{a} is even\" if a % 2 == 0 else f\"{a} is odd\")# 1 is odd  2) 내가 푼 방법 - 조건문과 콤마를 활용하기a = int(input())if a % 2 == 0 :    print( a, 'is even')else :    print( a, 'is odd')# 1 is odd해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (08) - 문자열 돌리기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(08)-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%8F%8C%EB%A6%AC%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-25 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\b문자열 돌리기  문제 설명  문자열 str이 주어집니다.문자열을 시계방향으로 90도 돌려서 아래 입출력 예와 같이 출력하는 코드를 작성해 보세요.  제한사항  • 1 ≤ str1, str2의 길이 ≤ 10  입출력 예입력 #1abcde출력 #1applepen  제시 코드str = input()02 풀이  1) 내가 푼 방법 - \bfor문...",
    "content": "01 문제 :\b문자열 돌리기  문제 설명  문자열 str이 주어집니다.문자열을 시계방향으로 90도 돌려서 아래 입출력 예와 같이 출력하는 코드를 작성해 보세요.  제한사항  • 1 ≤ str1, str2의 길이 ≤ 10  입출력 예입력 #1abcde출력 #1applepen  제시 코드str = input()02 풀이  1) 내가 푼 방법 - \bfor문 활용하기  \bfor문(반복문)을 활용하여, str의 낱개별 문자를 출력하면 된다.for i in str :    print(i)03 Answer  1) 내가 푼 방법 - \breplace() 활용 정답str = input()for i in str :    print(i)# \ba# \bb# \bc# \bd# \be해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (07) - 문자열 붙여서 출력하기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(07)-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%B6%99%EC%97%AC%EC%84%9C-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-25 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\b문자열 붙여서 출력하기  문제 설명  두 개의 문자열 str1, str2가 공백으로 구분되어 입력으로 주어집니다.입출력 예와 같이 str1과 str2을 이어서 출력하는 코드를 작성해 보세요.  제한사항  • 1 ≤ str1, str2의 길이 ≤ 10  입출력 예입력 #1apple pen출력 #1applepen입력 #2Hello World...",
    "content": "01 문제 :\b문자열 붙여서 출력하기  문제 설명  두 개의 문자열 str1, str2가 공백으로 구분되어 입력으로 주어집니다.입출력 예와 같이 str1과 str2을 이어서 출력하는 코드를 작성해 보세요.  제한사항  • 1 ≤ str1, str2의 길이 ≤ 10  입출력 예입력 #1apple pen출력 #1applepen입력 #2Hello World!출력 #2HelloWorld!  제시 코드str1, str2 = input().strip().split(' ')02 풀이  1) 내가 푼 방법 - \breplace() 활용하기  문자열 일부를 다른 문자열로 바꾸고 싶을 때 replace() 함수를 사용할 수 있다.특정 문자 또는 문자열을 찾아 다른 문자 또는 문자열로 교체하는 기능을 제공한다.print(str1.replace(\" \", \"\") + str2.replace(\" \", \"\"))# applepen  2) 더 줄여볼 수 있을까?  input() 값 자체에 replace()를 걸어줄 수도 있더라..print(input().strip().replace(' ', ''))# applepen03 Answer  1) 내가 푼 방법 - \breplace() 활용 정답a, b = map(int, input().strip().split(' '))print(f\"{a} + {b} = {a+b}\")# \bapplepen  2) 내가 푼 방법 - 더 줄여보기print(input().strip().replace(' ', ''))# applepen해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (06) - 덧셈식 출력하기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(06)-%EB%8D%A7%EC%85%88%EC%8B%9D-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-25 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\b덧셈식 출력하기  문제 설명  두 정수 a, b가 주어질 때 다음과 같은 형태의 계산식을 출력하는 코드를 작성해 보세요.a + b = c  제한사항  • 1 ≤ a, b ≤ 100  입출력 예입력 #14 5출력 #14 + 5 = 9  제시 코드a, b = map(int, input().strip().split(' '))02 풀이  1) ...",
    "content": "01 문제 :\b덧셈식 출력하기  문제 설명  두 정수 a, b가 주어질 때 다음과 같은 형태의 계산식을 출력하는 코드를 작성해 보세요.a + b = c  제한사항  • 1 ≤ a, b ≤ 100  입출력 예입력 #14 5출력 #14 + 5 = 9  제시 코드a, b = map(int, input().strip().split(' '))02 풀이  1) 내가 푼 방법 - f-string 활용하기  Python 3.6 이상에서는 f-string을 사용하여 문자열 안에 변수를 직접 삽입할 수 있다.예를 들어, a = 4일 때, print(f\"a = {a}\") 와 같이 사용할 수 있다.이 방법이 가독성이 더 좋아, 자주 활용할 것 같다.print(f\"{a} + {b} = {a+b}\")# \b4 + 5 = 9  2) 내가 푼 방법 - 연산식 사용하기  a와 b 를 문자열로 형변환 하고, 연산식을 활용하여 문제를 풀 수 있다.print(str(a) + \" + \" + str(b) + \" = \" + str(a+b))# AbCdEfG03 Answer  1) 내가 푼 방법 - f-string 활용하기a, b = map(int, input().strip().split(' '))print(f\"{a} + {b} = {a+b}\")# \b4 + 5 = 9  2) 내가 푼 방법 - 연산식 사용하기a, b = map(int, input().strip().split(' '))print(str(a) + \" + \" + str(b) + \" = \" + str(a+b))# \b4 + 5 = 9해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (05) - 특수문자 출력하기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(05)-%ED%8A%B9%EC%88%98%EB%AC%B8%EC%9E%90-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-25 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\b특수문자 출력하기  문제 설명  다음과 같이 출력하도록 코드를 작성해 주세요.  출력 예시  !@#$%^&amp;*(\\'\"&lt;&gt;?:;  02 풀이  1) 내가 푼 방법 - \\ 추가하여 출력하기  \b특정한 특수문자를 출력하기 위해선, 해당 특수문자 앞에 \\ 를 붙여주어야 한다.  • \\n  줄바꿈• \\t  tab• \\\\  백슬래시...",
    "content": "01 문제 :\b특수문자 출력하기  문제 설명  다음과 같이 출력하도록 코드를 작성해 주세요.  출력 예시  !@#$%^&amp;*(\\'\"&lt;&gt;?:;  02 풀이  1) 내가 푼 방법 - \\ 추가하여 출력하기  \b특정한 특수문자를 출력하기 위해선, 해당 특수문자 앞에 \\ 를 붙여주어야 한다.  • \\n  줄바꿈• \\t  tab• \\\\  백슬래시• \\\"  큰 따옴표• \\'  작은 따옴표print('!@#$%^&amp;*(\\\\\\'\"&lt;&gt;?:;')  2) 다른 사람들의 풀이 - \br 이용하기  \b\\, \", ' 같이 역슬래시를 많이 이용해야 하는경우는 간편하게 r 을 붙이면 된다.처음 알았는데, 가독성 면에서 이 코드가 더욱 좋은 것 같다.print(r'!@#$%^&amp;*(\\'\"&lt;&gt;?:;')03 Answer  1) 내가 푼 방법 - \\ 추가하여 출력하기print('!@#$%^&amp;*(\\\\\\'\"&lt;&gt;?:;')# !@#$%^&amp;*(\\'\"&lt;&gt;?:;  2) 다른 사람들의 풀이 - \br 이용하기print(r'!@#$%^&amp;*(\\'\"&lt;&gt;?:;')# !@#$%^&amp;*(\\'\"&lt;&gt;?:;해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (04) - 대소문자 바꿔서 출력하기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(04)-%EB%8C%80%EC%86%8C%EB%AC%B8%EC%9E%90-%EB%B0%94%EA%BF%94%EC%84%9C-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-25 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\b대소문자 바꿔서 출력하기  문제 설명  영어 알파벳으로 이루어진 문자열 str이 주어집니다.각 알파벳을 대문자는 소문자로 소문자는 대문자로 변환해서 출력하는 코드를 작성해 보세요.  제한사항  • 1 ≤ str의 길이 ≤ 20• str은 알파벳으로 이루어진 문자열입니다.  입출력 예입력 #1aBcDeFg출력 #1AbCdEfG  제시 코드...",
    "content": "01 문제 :\b대소문자 바꿔서 출력하기  문제 설명  영어 알파벳으로 이루어진 문자열 str이 주어집니다.각 알파벳을 대문자는 소문자로 소문자는 대문자로 변환해서 출력하는 코드를 작성해 보세요.  제한사항  • 1 ≤ str의 길이 ≤ 20• str은 알파벳으로 이루어진 문자열입니다.  입출력 예입력 #1aBcDeFg출력 #1AbCdEfG  제시 코드str = input()02 풀이  1) 내가푼 방법 - for문과 조건문 활용하여 풀기  \bfor문으로 str 의 각각 문자들을 가져오고, 각 문자별 대문자 / 소문자 케이스를 확인해 새로운 변수에 값을 추가해 주었다.str = input()result = \"\"for i in str :    if i.isupper() :        result += i.lower()    else:        result += i.upper()    print(result)# AbCdEfG  2) 다른사람들의 풀이 - swapcase()  \bswapcase()를 활용하면 대문자는 소문자로, 소문자는 대문자로 알아서 바로 변환해준다..파이썬에는 정말 편리한 기능이 많다고 생각이 들었다. 하지만 편하다고 남발해선 안될 것 같다. 편리함에 익숙해지면.. 다른 문제를 풀때 어려움을 느낄 수도 있을 것 같다는 생각이 들기 때문에..str.swapcase()# AbCdEfG03 Answer  1) 내가푼 방법 - for문과 조건문str = input()result = \"\"for i in str :    if i.isupper() :        result += i.lower()    else:        result += i.upper()    print(result)# AbCdEfG  2) 다른사람들의 풀이 - swapcase()str = input()str.swapcase()# AbCdEfG해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (03) - 문자열 반복해서 출력하기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(03)-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%B0%98%EB%B3%B5%ED%95%B4%EC%84%9C-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-25 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\b문자열 반복해서 출력하기  문제 설명  문자열 str과 정수 n이 주어집니다.str이 n번 반복된 문자열을 만들어 출력하는 코드를 작성해 보세요.  제한사항  • 1 ≤ str의 길이 ≤ 10• 1 ≤ n ≤ 5  입출력 예입력 #1string 5출력 #1stringstringstringstringstring  제시 코드str, n = ...",
    "content": "01 문제 :\b문자열 반복해서 출력하기  문제 설명  문자열 str과 정수 n이 주어집니다.str이 n번 반복된 문자열을 만들어 출력하는 코드를 작성해 보세요.  제한사항  • 1 ≤ str의 길이 ≤ 10• 1 ≤ n ≤ 5  입출력 예입력 #1string 5출력 #1stringstringstringstringstring  제시 코드str, n = input().strip().split(' ')n = int(n)02 풀이  1) 연산자를 활용하여 풀기  \b문자열 * 넘버 = 문자열 인것을 활용하여, str * n 으로 간단하게 풀 수 있다.print(str*n)03 Answer  1) 연산자를 활용하여 풀기str, n = input().strip().split(' ')n = int(n)print(str*n)# stringstringstringstringstring해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (02) - a와 b 출력하기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(02)-a%EC%99%80-b-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-25 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\ba와 b 출력하기  문제 설명  정수 a와 b가 주어집니다. 각 수를 입력받아 입출력 예와 같은 형식으로 출력하는 코드를 작성해 보세요.  제한사항  • 100,000 ≤ a, b ≤ 100,000  입출력 예입력 #14 5출력 #1a = 4b = 5  제시 코드a, b = map(int, input().strip().split(' ')...",
    "content": "01 문제 :\ba와 b 출력하기  문제 설명  정수 a와 b가 주어집니다. 각 수를 입력받아 입출력 예와 같은 형식으로 출력하는 코드를 작성해 보세요.  제한사항  • 100,000 ≤ a, b ≤ 100,000  입출력 예입력 #14 5출력 #1a = 4b = 5  제시 코드a, b = map(int, input().strip().split(' '))02 풀이  1) 콤마를 활용하여 풀기  \bprint(\"hello\", x)와 같이 콤마(,)를 사용하여 문자열과 변수를 함께 출력할 수 있다.print(\"a =\",a,\"\\n\"\"b =\",b)# \\n 은 줄바꿈에 활용된다.  2) f-string 활용하여 풀기  \bPython 3.6 이상에서는 f-string을 사용하여 문자열 안에 변수를 직접 삽입할 수 있다.예를 들어, a = 4일 때, print(f\"a = {a}\") 와 같이 사용할 수 있다.print(f\"a = {a}\\nb = {b}\")# \\n 은 줄바꿈에 활용된다.03 Answer  1) 콤마를 활용한 정답a, b = map(int, input().strip().split(' '))print(\"a =\",a,\"\\n\"\"b =\",b)# a = 4# b = 5  2) f-string을 활용한 정답a, b = map(int, input().strip().split(' '))print(f\"a = {a}\\nb = {b}\")# a = 4# b = 5해당문제 풀러가보기"
  },
  
  {
    "title": "프로그래머스 Python 코테준비 기초 (01) - 문자열 출력하기",
    "url": "/posts/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Python-%EC%BD%94%ED%85%8C%EC%A4%80%EB%B9%84-%EA%B8%B0%EC%B4%88-(01)-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0/",
    "categories": "Programmers, 기초",
    "tags": "Algorithm, Programmers",
    "date": "2024-03-25 00:00:00 +0900",
    





    
    "snippet": "01 문제 :\b문자열 출력하기  문제 설명  문자열 str이 주어질 때, str을 출력하는 코드를 작성해 보세요.  제한사항  • 1 ≤ str의 길이 ≤ 1,000,000• str에는 공백이 없으며, 첫째 줄에 한 줄로만 주어집니다.  입출력 예입력 #1HelloWorld!출력 #1HelloWorld!  제시 코드str = input()02 풀이  ...",
    "content": "01 문제 :\b문자열 출력하기  문제 설명  문자열 str이 주어질 때, str을 출력하는 코드를 작성해 보세요.  제한사항  • 1 ≤ str의 길이 ≤ 1,000,000• str에는 공백이 없으며, 첫째 줄에 한 줄로만 주어집니다.  입출력 예입력 #1HelloWorld!출력 #1HelloWorld!  제시 코드str = input()02 풀이  \b원하는 값을 출력할 수 있는 방법은 print(값)을 활용하여 출력할 수 있다.print(str)03 Answerstr = input()print(str)해당문제 풀러가보기"
  },
  
  {
    "title": "JAVA study (08) - Array 배열을 print 했을때 주소값이 나오는 이유",
    "url": "/posts/JAVA-study-(08)-Array-%EB%B0%B0%EC%97%B4%EC%9D%84-print-%ED%96%88%EC%9D%84%EB%95%8C-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%A3%BC%EC%86%8C%EA%B0%80-%EB%82%98%EC%98%A4%EB%8A%94-%EC%9D%B4%EC%9C%A0/",
    "categories": "Java, Study",
    "tags": "Java",
    "date": "2024-03-19 00:00:00 +0900",
    





    
    "snippet": "🔎 배열을 출력했을때 메모리 주소가 나오는 이유\bint[] arrayValue = new int[5] //배열 생성System.out.println(arrayValue) // [I@a09ee92  위에는 [1, 2, 3, 4, 5] 의 값을 가지고있는 배열을 생성하였다.그리고 해당 변수를 출력해보면 메모리 주소값이 출력이 되는데, [I@a09ee92 ...",
    "content": "🔎 배열을 출력했을때 메모리 주소가 나오는 이유\bint[] arrayValue = new int[5] //배열 생성System.out.println(arrayValue) // [I@a09ee92  위에는 [1, 2, 3, 4, 5] 의 값을 가지고있는 배열을 생성하였다.그리고 해당 변수를 출력해보면 메모리 주소값이 출력이 되는데, [I@a09ee92 이는 왜이럴까?01. 배열 참조값 보관int[] arrayValue = new int[1, 2, 3, 4, 5] //배열 생성System.out.println(arrayValue) // [I@a09ee92  int[] students 변수는 new int[5] 로 생성한 배열의 참조값을 가지고 있다.      new int[5] 로 배열을 생성하면 배열의 크기만큼 매모리를 확보한다.    배열을 생성하고 나면 자바는 메모리 어딘가에 있는 이 배열에 접근할 수 있는 참조값(주소)[I@a09ee92 를 반환한다.    앞서 선언한 배열 변수인 int[] students 에 생성된 배열의 참조값[I@a09ee92을 보관한다.    int[] students의 변수를 통해, [1, 2, 3, 4, 5]의 배열에 접근할 수 있다.  02. 간단하게 풀어보기int[] arrayValue = new int[5]; //1. 배열 생성  int[] students = [I@a09ee92; //2. new int[5]의 결과로 [I@a09ee92 참조값 반환arrayValue = [I@a09ee92 //3. 최종 결과  이는 메모리의 STACK 과 HEAP에 관련이 있다.이 문제는 추후에 정리하여 글을 올리도록 하겠다."
  },
  
  {
    "title": "JAVA 문법 (06) - 배열",
    "url": "/posts/JAVA-%EB%AC%B8%EB%B2%95-(06)-%EB%B0%B0%EC%97%B4/",
    "categories": "Java, Grammar",
    "tags": "Java",
    "date": "2024-03-13 00:00:00 +0900",
    





    
    "snippet": "🔎 배열이란  배열(Array)는 동일한 데이터 타입의 연속된 메모리 공간에 저장된 요소들의 집합이다.01. 값 목록으로 배열 생성int[] scores = {10, 20, 30, 40, 50, 60, 70, 80, 90, 100}  • \b정해진 값의 목록이 있다면 위와 같이 배열 객체를 생성할 수 있다.int[] scores = {10, 20, 30...",
    "content": "🔎 배열이란  배열(Array)는 동일한 데이터 타입의 연속된 메모리 공간에 저장된 요소들의 집합이다.01. 값 목록으로 배열 생성int[] scores = {10, 20, 30, 40, 50, 60, 70, 80, 90, 100}  • \b정해진 값의 목록이 있다면 위와 같이 배열 객체를 생성할 수 있다.int[] scores = {10, 20, 30, 40, 50, 60, 70, 80, 90, 100}scores[0] = 15;  • \b대입 연산자로 값을 바꿀 수 있다.02. new 연산자로 배열 생성int[] scores = new int[5];  • 정해진 값의 목록이 없지만, 앞으로 값을 정장할 배열을 미리 만들고 싶다면 new 연산자를 사용할 수 있다.  new 연산자로 배열을 처음 생성할 때는 자동으로 기본값으로 초기화 된다.int의 경우에는 0의 값이 메모리에 저장이된다.03. 타입별 배열의 초기값                                             분류      타입      초기화              기본 타입(정수)      byte[]  char[]  short[]  int[]  long[]      0  ‘\\u000’  0  0  0L              기본 타입(실수)      float[ ]  double[ ]      0.0F  0.0              기본 타입(논리)      boolean[]      false              참조 타입      클래스[ ]      null              인터페이스[ ]      null             "
  },
  
  {
    "title": "JAVA 문법 (05) - for, while, do-while 반복문",
    "url": "/posts/JAVA-%EB%AC%B8%EB%B2%95-(05)-for,-while,-do-while-%EB%B0%98%EB%B3%B5%EB%AC%B8/",
    "categories": "Java, Grammar",
    "tags": "Java",
    "date": "2024-03-13 00:00:00 +0900",
    





    
    "snippet": "🔎 반복문이란  코드를 반복적으로 실행하게 하는 제어문의 한 종류이다. 반복문의 종류는 크게 세가지가 있다.• for 문• while문• do-while 문🔎 for 문int num = 0;for(int i = 0(초기화); i &lt; 10(조건식); i++(증감식) {\tnum += i;}\tSystem.out.println(num);  • for문은...",
    "content": "🔎 반복문이란  코드를 반복적으로 실행하게 하는 제어문의 한 종류이다. 반복문의 종류는 크게 세가지가 있다.• for 문• while문• do-while 문🔎 for 문int num = 0;for(int i = 0(초기화); i &lt; 10(조건식); i++(증감식) {\tnum += i;}\tSystem.out.println(num);  • for문은 초기화, 조건식, 증감식으로 구성된 제어 구조• 반복 횟수가 정해져 있는 경우에 사용• 주어진 횟수만큼 반복을 수행하며, 반복 횟수를 명시적으로 알 수 있기 때문에 사용하기 간편int sum = 0;  int endNum = 3;    for (int i = 1; i &lt;= endNum; i++) {      sum = sum + i;      System.out.println(\"i= \" + i + \" sum=\" + sum);  }//i= 1 sum=1//i= 2 sum=3//i= 3 sum=6  \bendNum및 또는 반복계수 i 값에 따라 몇번의 반복문을 돌릴지 설정할 수 있다.🔎 while 문증감변수while(조건식) {\t실행문1;\t증감식1;}  • while문은 주어진 조건식이 참인 동안 반복을 수행하는 제어 구조• 반복 횟수가 정해져 있지 않고, 조건이 만족될 때까지 반복을 수행해야 할 때 사용• 조건식이 처음부터 거짓이면 반복을 수행하지 않을 수 있음int count = 0;while (count &lt; 3) {      count = ++count;      System.out.println(\"현재 숫자는: \" + count);  }// 현재 숫자는: 1// 현재 숫자는: 2// 현재 숫자는: 3  count의 값을 while문 안에서 증감시켜주어, 원하는 구간까지 반복되도록 설정할 수 있다.🔎 do-while문do {\t실행문1;} while (조건식);  • do-while문은 while문과 유사하지만, 코드 블록을 실행한 후에 조건식을 평가• 코드 블록을 최소한 한 번은 실행하고, 그 후에 조건식을 평가하여 반복 여부를 결정• 건식이 처음부터 거짓이더라도 코드 블록은 최소한 한 번은 실행되므로, 반복 실행을 보장할 때 사용int i = 1;    do {      System.out.println(\"현재 숫자는: \" + i);      i++;  } while (i &lt; 1);// 현재 숫자는: 1  위의 코드를 보면, 먼저 do 영역에서 코드가 반드시 실행된다. 따라서, i의 값이 1이므로,\"현재 숫자는: 1\" 이라는 출력값을 볼 수 있다.그 이후에 while영역에서 i &lt; 1 의 조건이 거짓이기 때문에 반복문을 종료한다."
  },
  
  {
    "title": "JAVA 문법 (04) - switch 조건문",
    "url": "/posts/JAVA-%EB%AC%B8%EB%B2%95-(04)-switch-%EC%A1%B0%EA%B1%B4%EB%AC%B8/",
    "categories": "Java, Grammar",
    "tags": "Java",
    "date": "2024-03-13 00:00:00 +0900",
    





    
    "snippet": "🔎 조건문 이란  개발자가 작성한 코드를 특정 조건에 따라 코드의 실행의 흐름을 제어하는 것이다. 조건문은 크게 아래와 같이 나뉜다.• if 문\t- else if\t- else • switch 문🔎 switch문01. switch 문switch (값) {\tcase 값1 : \t\t실행문1;\t\tbreak;\t\t\tcase 값2 : \t\t실행문2;\t\tbreak;\t\t...",
    "content": "🔎 조건문 이란  개발자가 작성한 코드를 특정 조건에 따라 코드의 실행의 흐름을 제어하는 것이다. 조건문은 크게 아래와 같이 나뉜다.• if 문\t- else if\t- else • switch 문🔎 switch문01. switch 문switch (값) {\tcase 값1 : \t\t실행문1;\t\tbreak;\t\t\tcase 값2 : \t\t실행문2;\t\tbreak;\t\t\tcase 값3 : \t\t실행문3;\t\tbreak;\tdefault :\t\t실행문4;}  조건식에 해당하는 특정 값으로 실행할 코드를 선택한다int grade = 2;int coupon;  int coupon;  switch (grade) {      case 1:          coupon = 1000;          break;      case 2:          coupon = 2000;  //실행        break;  //종료    case 3:          coupon = 3000;          break;        default:          coupon = 500;  }  System.out.println(\"발급받은 쿠폰: \" + coupon);// 발급받을 쿠폰: 2000  grade가 현재 2로 설정이 되어있고,switch문에서 case\b별 적혀있는 값이 변수 grade 값과 동일할 때, 해당 조건식이 실행되고, break;에서 switch문을 종료한다.02. Java 14 이상 switch 문int grade = 2;    int coupon = switch (grade) {      case 1 -&gt; 1000;    case 2 -&gt; 2000;    case 3 -&gt; 3000;    case 4 -&gt; 4000;    default -&gt; 500;};  System.out.println(\"발급받은 쿠폰: \" + coupon);  Java버전이 14이상일 경우, 해당 문법을 사용할 수 있다.case별 break;를 적어주지 않아도 돼서 더욱 간편하게 사용할 수 있다.🔎 switch문 vs if문if문     • 단일 조건을 평가하고, 조건이 참(true)인 경우에만 해당 코드 블록을 실행     • 조건식의 결과에 따라 다양한 조건을 처리, 조건식에 비교 연산자를 사용하여 값의 크기나 동등성을 비교     • 논리적인 조건을 다루는 데 유연성이 있고, 여러 개의 조건을 체인으로 연결하거나 복잡한 조건식을 작성할 수 있음 또한 else문과 else if문을 사용하여 추가적인 조건을 처리할 수 있음     • 범위에 대한 체크, 다양한 조건에 따른 분기, 복잡한 조건 처리switch문     • switch문은 변수나 식의 값을 여러 가지 경우(case)와 비교하여 일치하는 경우 해당 코드 블록을 실행     • s값의 동등성을 비교하는 데 사용, 각 case는 일치하는 값을 가지고 있으며, 해당 case에 해당하는 코드 블록이 실행     • if문보다 특정 값에 대한 다중 분기를 처리하는 데 더 적합. 여러 개의 값을 비교해야 할 때 switch문을 사용하면 코드의 가독성을 높임     • 일치하는 값이 없을 경우에 대비해 default문을 사용하여 기본 동작 정의     • 일치하는 값에 따라 분기를 처리하는 간단한 상황에서 효과적으로 사용"
  },
  
  {
    "title": "JAVA 문법 (03) - if, else, else if 조건문",
    "url": "/posts/JAVA-%EB%AC%B8%EB%B2%95-(03)-if,-else,-else-if-%EC%A1%B0%EA%B1%B4%EB%AC%B8/",
    "categories": "Java, Grammar",
    "tags": "Java",
    "date": "2024-03-13 00:00:00 +0900",
    





    
    "snippet": "🔎 조건문 이란  개발자가 작성한 코드를 특정 조건에 따라 코드의 실행의 흐름을 제어하는 것이다. 조건문은 크게 아래와 같이 나뉜다.• if 문\t- else if\t- else • switch 문🔎 if / else / else if01. if문if (조건식) {\t실행문1;\t실행문2;}  조건식이 true 일경우 중괄호 안에있는 실행문을 실행시킨다.in...",
    "content": "🔎 조건문 이란  개발자가 작성한 코드를 특정 조건에 따라 코드의 실행의 흐름을 제어하는 것이다. 조건문은 크게 아래와 같이 나뉜다.• if 문\t- else if\t- else • switch 문🔎 if / else / else if01. if문if (조건식) {\t실행문1;\t실행문2;}  조건식이 true 일경우 중괄호 안에있는 실행문을 실행시킨다.int age = 20;if (age &gt;= 20) { //true\tSystem.out.println(\"성인입니다\") //실행}if (age =&lt; 20) { //false\tSystem.out.println(\"미성년자입니다\") //실행안됨}// 성인입니다  age가 20살 이상일 경우, \"성인입니다\" 가 출력이 되고, 20살 미만일 경우, \"미성년자입니다\" 가 출력되는것을 볼 수 있다. 하지만 이렇게 된 경우에는 같은 조건(나이)아래 조건문이 두번실행 되므로, 좋은 방법이 아니다.02. else문if (조건식) { \t실행문1;\t실행문2;} else { //if문의 조건식이 거짓일 때 실행\t실행문3;}  else문은 위의 if문의 조건이 모두 거짓일때 실행된다.int age = 18;if (age &gt;= 20) { //false\tSystem.out.println(\"성인입니다\") //실행} else { //true\tSystem.out.println(\"미성년자입니다\") //실행안됨}// 성인입니다  나이가 20살 이상이 아니라면 전부 \"미성년자\"가 출력된다.03. else if 문if (조건식1) { // false\t실행문1;\t실행문2;} else if (조건식2) { // false\t실행문3;\t실행문4;} else if (조건식3) { // true\t실행문5; //실행\t실행문6; //실행} else { \t실행문7;}  else if문의조건식3 이 true 일경우 실행문5, 실행문6를 실행하고, 나머지 아래의 코드들은 실행되지 않는다.04. if문 여러개와 else if 문의 차이그렇다면, if문이 여러개인 경우와 else if을 활용하여 만든 조건식의 차이는 무엇이 있을까?이는 조건문이 실행되는 방식과, 출력하려는 값과, 주어진 조건의 개수에 따라 활용도가 다르다.1) if문이 여러개일 경우 (불필요한 조건 검사)int age = 14;if(age &lt;= 7) { //~7: 미취학 \tSystem.out.println(\"미취학\");}if(age &gt;= 8 &amp;&amp; age &lt;= 13) { //8~13: 초등학생\tSystem.out.println(\"초등학생\");}if(age &gt;= 14 &amp;&amp; age &lt;= 16) { //14~16: 중학생\tSystem.out.println(\"중학생\");}if(age &gt;= 17 &amp;&amp; age &lt;= 19) { //17~19: 고등학생\tSystem.out.println(\"고등학생\");}if (age &gt;= 20) { //20~: 성인\tSystem.out.println(\"성인\");}// 중학생  위의 코드는 불필요한 조건 검사가 이루어 진다.만약 나이가 5살이라면 미취학이 이미 출력되어야 하지만, 나머지 if문을 통한 검사도 모두 실행해야 한다.  코드의 효율성에서도 좋지 않다.나이가 9살인 초등학생 이라면, 미취학을 체크하는 조건인 age &lt;= 7을 통해 나이가 이미 8살이 넘는다는 것을 알 수 있다. 하지만, 두번째 조건문에서 확인할 수 있듯이, age &gt;= 8, age &lt;= 13이란 조건문이 실행되고, 앞전에 이미 8살을 넘는다는 조건과 포함하여 중복체크 한것을 볼 수 있다.2) else if 문의 효율성int age = 14;if (age &lt;= 7){      System.out.println(\"미취학\");  } else if (age &lt;= 13) {  // 위에서 이미 나이가 7살 이상이라는 조건을 검사했기 때문    System.out.println(\"초등학생\");  } else if (age &lt;= 16) {      System.out.println(\"중학생\");  } else if (age &lt;= 19) {      System.out.println(\"고등학생\");  } else {      System.out.println(\"성인\");  }  위의 코드는 앞전에서 검사한 조건을 토대로 이어서 else if문이 실행된다age &lt;= 7 의 조건이 거짓이면, 그다음 조건에는 이미 나이가 7살 이상이라는 데이터를 가지고 있다.따라서, 지금과 같은 상황에서는 else if 문을 사용하는것이 더 유리하다.05. 상황에 따라 다르게 쓰이는 if문과 else if문  상황온라인 쇼핑몰의 할인 시스템을 개발해야 한다. 한 사용자가 어떤 상품을 구매할 때, 다양한 할인 조건에 따라 총 할인 금액이 달라질 수 있다. 각각의 할인 조건은 다음과 같다. \t• 조건 1 : 아이템 가격이 10000원 이상일 때, 1000원 할인\t• 조건 2 : 나이가 10살 이하일 때 1000원 추가 할인위의 상황에서는 한 사용자가 동시에 여러 할인을 받을 수 있다는 점 이다.1) 여러 할인을 받아야 하기 때문에, if문을 여러번 사용int price = 10000;  int age = 10;  int discount = 0;    if (price &gt;= 10000) {      discount = discount + 1000;      System.out.println(\"10000원 이상 구매, 1000원 할인\");  }  if (age &lt;= 10) {      discount = discount + 1000;      System.out.println(\"어린이 1000원 할인\");  }    System.out.println(\"총 할인 금액: \" + discount + \"원\");// 총 할인 금액: 2000원  위의 코드에서는 고객이 1만원 이상을 구매했고, 나이도 10살 이하라 2번의 할인을 받아야하므로,조건을 두번 나누어 주었다. 그럼 우리가 원했던 할인 시스템의 값이 출력되는것을 볼 수 있다.출력 : 총 할인 금액: 2000원2) 위와 같은 상황에 else if문을 사용하면..int price = 10000;  int age = 10;  int discount = 0;    if (price &gt;= 10000) {  // 1. 실행되면    discount = discount + 1000;      System.out.println(\"10000원 이상 구매, 1000원 할인\");  } else if (age &lt;= 10) {  // 2. 실행이 안됨    discount = discount + 1000;      System.out.println(\"어린이 1000원 할인\");  } else {      System.out.println(\"할인 없음\");  }  System.out.println(\"총 할인 금액: \" + discount + \"원\");//총 할인 금액: 1000원  else if문을 사용하게 된다면, 첫번째 조건문이 실행된 경우, 두번째의 조건문은 실행이 되지 않기 때문에, 우리가 원했던 할인 시스템 값인 2000원이 아닌, 1000원이 출력되는 것을 볼 수 있다.출력 : 총 할인 금액: 1000원🔎 정리  조건문도 상황에 따라 if문을 여러개 쓸지, else if문을 사용할지 등 고려해야할 부분이 많다.코드를 막 적는게 중요한게 아닌, 상황에 맞에 코드를 어떻게 작성해야할지를 심중히 고민해봐야 좋은 코드가 될 것이다."
  },
  
  {
    "title": "mySQL 문법 (11) - GROUP BY 데이터 그룹화하기, WHERE HAVING 차이",
    "url": "/posts/mySQL-%EB%AC%B8%EB%B2%95-(11)-GROUP-BY-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B7%B8%EB%A3%B9%ED%99%94%ED%95%98%EA%B8%B0,-WHERE-HAVING-%EC%B0%A8%EC%9D%B4/",
    "categories": "mySQL, Grammarㅤ",
    "tags": "mySQL",
    "date": "2024-03-12 00:00:00 +0900",
    





    
    "snippet": "💡GROUP BY01. GROUP BY  The GROUP BY statement groups rows that have the same values into summary rows, like “find the number of customers in each country”. The GROUP BY statement is often used with...",
    "content": "💡GROUP BY01. GROUP BY  The GROUP BY statement groups rows that have the same values into summary rows, like “find the number of customers in each country”. The GROUP BY statement is often used with aggregate functions (COUNT(), MAX(), MIN(), SUM(), AVG()) to group the result-set by one or more columns.GROUP BY 는 유형별로 개수를 알고 싶을때 사용한다.02. WHERE과 HAVING  WHERE는 그룹화 하기 전의 조건 HAVING는 그룹화 후 의 조건💡문법 Syntax01. \b특정 컬럼을 그룹화SELECT 컬럼1 FROM 테이블 GROUP BY 그룹화할 컬럼;SELECT restaurant_name, COUNT(*) FROM food_orders GROUP BY restaurant_name;  • 조건 1 : 없음• 해석 : \b음식 주문 테이블에서 레스토랑 별로 몇개의 주문이 있었는지 조회해줘\b* GROUP BY를 하지 않으면?SELECT restaurant_name, COUNT(*) FROM food_orders;  • GROUP BY를 하지 않았을 경우, 2번째 컬럼의 연산때문에 데이터상 첫번째로 등록되어있는 레스토랑 이름이 나오게 되고, 전체 음식주문 개수가 나오게 된다.02. \b조건 처리 후, 컬럼 그룹화SELECT 컬럼1 FROM 테이블 WHERE 조건식1 GROUP BY 그룹화할 컬럼;SELECT restaurant_name, cuisine_type FROM food_orders WHERE cuisine_type = 'Korean' GROUP BY 1;  • 조건 1 : cuisine_type = ‘Korean’ • 해석 : \b음식 주문 테이블에서 한식을 판매중인 레스토랑 리스트를 보여줘.03. 컬럼 그룹화 후, 조건 처리SELECT 컬럼1 FROM 테이블 GROUP BY 그룹화할 컬럼 HAVING 조건식1;SELECT restaurant_name, AVG(price) FROM food_orders group by 1HAVING AVG(price) &gt; 15000  • 조건 1 : AVG(price) &gt; 15000• 해석 : \b음식 주문 테이블에서 레스토랑별 판매한 음식의 평균 값이 15000원 이상인 데이터를 보여줘04. 조건 처리 후, 그룹화 후, 조건처리SELECT 컬럼1 FROM 테이블 WHERE 조건식1 GROUP BY 그룹화할 컬럼1 HAVING 조건식2;SELECT restaurant_name, AVG(price)  FROM food_orders  where cuisine_type = 'korean'  group by 1  HAVING AVG(price) &gt; 12000  • 조건 1 : AVG(price) &gt; 15000 • 조건 2 : where cuisine_type = ‘korean’• 해석 : \b음식 주문 테이블에서 한식을 판매하는 레스토랑별 판매한 음식의 평균 값이 12000원 이상인 데이터를 보여줘💡WHERE과 HAVING 헷갈리지 말자  두개가 모두 조건을 걸어주어서 헷갈려 하는 경우가 많다. 하지만 위에서 말했듯이,WHERE은 테이블 생성 전에 걸어주는 조건,HAVING은 테이블 생성 후에 걸어주는 조건으로 생각하면 쉽다.SELECT restaurant_name, AVG(price) FROM food_ordersgroup by 1;  위의 코드에 WHERE과 HAVING을 예시를 들어보겠다.해석 : 음식 주문 테이블에서 레스토랑 이름과, 평균 판매 금액을 레스토랑별로 보여줘01. 그룹하기 전 WHERE을 사용했을 때SELECT restaurant_name, AVG(price) FROM food_ordersWHERE AVG(price) &gt; 12000GROUP BY 1;  [HY000][1111] Invalid use of group function  결과는 Error그 이유는, Query의 실행 순서에 따라 작업의 우선순위에 차이가 있기 때문이다.    1) food_orders 테이블에서 FROM food_orders 2) AVG(price) &gt; 12000 인 데이터들 중 WHERE AVG(price) &gt; 12000 3) restaurant_name컬럼 기준으로 그룹한 GROUP BY 1; 4) restaurant_name, AVG(price)를 가져와줘 SELECT restaurant_name, AVG(price)여기서 보면, 3)에 테이블을 한번 GROUP BY를 통해 만들어 내는데, 테이블이 만들어지기도 전에 AVG(price) 라는 연산을 진행하여 생기는 오류이다.02. 그룹한 후HAVING을 사용했을 때SELECT restaurant_name, AVG(price) FROM food_ordersGROUP BY 1HAVING AVG(price) &gt; 12000  결과는 정상실행Query의 실행 순서는 아래와 같다. 1) food_orders 테이블에서 FROM food_orders 2) restaurant_name컬럼 기준으로 그룹하는데  GROUP BY 1; 3) AVG(price) &gt; 12000 인 데이터들을만 HAVING AVG(price) &gt; 12000 4) restaurant_name, AVG(price)를 가져와줘 SELECT restaurant_name, AVG(price) 여기서 보면, 2)에 테이블을 한번 GROUP BY를 통해 만들어 내고 난 후에 해당 테이블에서 AVG(price) &gt; 12000 이라는 조건을 걸기 때문에 에러가 나지 않는다."
  },
  
  {
    "title": "mySQL 문법 (10) - DELETE 데이터 삭제하기",
    "url": "/posts/mySQL-%EB%AC%B8%EB%B2%95-(10)-DELETE-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%82%AD%EC%A0%9C%ED%95%98%EA%B8%B0/",
    "categories": "mySQL, Grammarㅤ",
    "tags": "mySQL",
    "date": "2024-03-12 00:00:00 +0900",
    





    
    "snippet": "💡DELETE01. DELETE  The DELETE statement is used to delete existing records in a table.UPDATE 는 테이블의 기존 데이터 값을 삭제하는데 사용한다.02. 주의사항  반드시 WHERE절을 사용하여 특정 데이터만 삭제하는데 사용하자. 그렇지 않으면 모든 데이터가 삭제될수도…💡문법 Syn...",
    "content": "💡DELETE01. DELETE  The DELETE statement is used to delete existing records in a table.UPDATE 는 테이블의 기존 데이터 값을 삭제하는데 사용한다.02. 주의사항  반드시 WHERE절을 사용하여 특정 데이터만 삭제하는데 사용하자. 그렇지 않으면 모든 데이터가 삭제될수도…💡문법 Syntax01. \b특정한 컬럼의 데이터값을 삭제할 때DELETE FROM 테이블명 WHERE 컬럼1 = '삭제할 값';02. \b모든 데이터를 삭제할 때DELETE FROM 테이블명💡사용예시01. 특정한 컬럼의 데이터값을 삭제할 때DELETE FROM CustomersWHERE CustomerID = 1;  • 조건 1 : CustomerID 가 1• 해석 : \b고객 테이블 고객 아이디가 1인 고객의 데이터를 삭제해줘02. 모든 데이터를 삭제할 때DELETE FROM Customers;  • 해석 : \b고객 테이블의 데이터를 모두 삭제해줘"
  },
  
  {
    "title": "JAVA study (07) - String 리터럴, String 객체",
    "url": "/posts/JAVA-study-(07)-String-%EB%A6%AC%ED%84%B0%EB%9F%B4,-String-%EA%B0%9D%EC%B2%B4%EC%9D%98-%EC%B0%A8%EC%9D%B4/",
    "categories": "Java, Study",
    "tags": "Java, JavaSpring",
    "date": "2024-03-12 00:00:00 +0900",
    





    
    "snippet": "🔎 문자열 생성\bJava에서 문자열을 생성하는 과정은 크게 2가지 방법이 있다.  String literal  new String()두개는 어떤 차이를 가지고 있을까?01. String LiteralString str1 = \"Hello\";String str2 = \"Hello\";  String Literal은 문자열을 생성하는 가장 간단하고 일반적이 방...",
    "content": "🔎 문자열 생성\bJava에서 문자열을 생성하는 과정은 크게 2가지 방법이 있다.  String literal  new String()두개는 어떤 차이를 가지고 있을까?01. String LiteralString str1 = \"Hello\";String str2 = \"Hello\";  String Literal은 문자열을 생성하는 가장 간단하고 일반적이 방법이다. 이 방식은 문자열을 큰 따옴표(“ “) 로 둘러싸서 표현한다. String Literal 방식으로 문자열을 생성하면, JAVA Heap 메모리 영역의 문자열 상수 풀(String Constant Pool) 영역에 값이 저장이 된다.02. new String()String str3 = new String(\"Hello\");  new String() 방식으로 문자열을 생성하면, 매번 새로운 String 객체가 생성된다. 즉, 문자열이 저장된 메모리 주소가 다르게 된다. 따라서 동일한 문자열을 가리키는 변수들도 서로 다른 메모리 주소를 참조하게 된다.🔎 메모리 저장의 차이String str1 = \"Hello\"; // 리터럴String str2 = \"Hello\"; // 리터럴String str3 = new String(\"Hello\"); //객체위의 코드처럼, str1, str2 는 리터럴 방식으로 문자열을 생성했고, str3은 객체 방식으로 문자열을 생성했다.  str1으로 인해 JAVA HEAP안의 String Constant pool 영역에 \"Hello\" 가 생성된다.  JVM이 String Constant Pool에 \"Hello\"가 존재함을 확인하고, str2는 새로운 값을 메모리에 할당하지 않고, str1의 주소를 참조한다.  str3은 객체이기 때문에 JAVA HEAP에 새로운 메모리를 할당하여 값을 저장한다.  String Constant Pool 란? JVM은 String Constant Pool을 사용하여 문자열 리터럴을 관리한다. 그 이유는 동일한 문자열 리터럴을 새로운 메모리에 생성하지 않고, 하나의 메모리에 값을 생성하고, 그 주소를 참조하게 만들어 메모리를 절약할 수 있고, 컴파일러가 코드를 최적화하는데 큰 도움을 준다."
  },
  
  {
    "title": "JAVA study (06) - 리터럴과 상수의 차이",
    "url": "/posts/JAVA-study-(06)-%EB%A6%AC%ED%84%B0%EB%9F%B4%EA%B3%BC-%EC%83%81%EC%88%98%EC%9D%98-%EC%B0%A8%EC%9D%B4/",
    "categories": "Java, Study",
    "tags": "Java, JavaSpring",
    "date": "2024-03-12 00:00:00 +0900",
    





    
    "snippet": "🔎 리터럴01. 리터럴(Literal) 이란?  Literal은 데이터(값) 그 자체, 즉 변수에 넣은 변하지 않는 데이터 즉 문자 그대로의 값이라고 할 수 있다. 리터럴은 변수에 할당될 수 있는 구체적인 값을 직접 표현한 것이다.02. \b리터럴(Literal)의 종류 및 선언방법1) 정수 리터럴 정수 값을 나타내며, 10진수, 16진수, 8진수, 2...",
    "content": "🔎 리터럴01. 리터럴(Literal) 이란?  Literal은 데이터(값) 그 자체, 즉 변수에 넣은 변하지 않는 데이터 즉 문자 그대로의 값이라고 할 수 있다. 리터럴은 변수에 할당될 수 있는 구체적인 값을 직접 표현한 것이다.02. \b리터럴(Literal)의 종류 및 선언방법1) 정수 리터럴 정수 값을 나타내며, 10진수, 16진수, 8진수, 2진수로 표현int a = 100int b = 0x6Fint c = 0144int d = 0b1010110// a,b,c,d 는 변수, 값들은 리터럴2) 부동 소수점 리터럴  실수 값을 나타내며, 소수점이 포함된 숫자나 지수를 사용해서 표현double a = 3.14double b = 2.5e2// a,b 는 변수, 값들은 리터럴3) 논리 리터럴  참(true) 또는 거짓(false)의 불리언 값boolean a = \btrueboolean b = 2.5e2// a,b 는 변수, 값들은 리터럴4) 문자 리터럴  참(true) 또는 거짓(false)의 불리언 값String a = \b'a'String b = '1'String c = '\\n'// a,b,c 는 변수, 값들은 리터럴5) 문자열 리터럴  큰따옴표(““)로 둘러싸인 문자들의 시퀀스String a = \b\"Hello, World\"String b = \"Java\"// a,b 는 변수, 값들은 리터럴6) Null 리터럴  참조 타입(객체 타입) 변수가 어떤 객체도 가리키지 않음을 나타냄String a = null;// a 는 변수, 값들은 리터럴🔎 상수01. 상수(Constant) 이란?  Constant는 프로그램 실행 도중 그 값이 변하지 않는 값을 의미한다. 한번 초기화 되면 그 값을 변경 할 수 없다. 일반적으로 프로그램에서 사용되는 고정된 값이나 식별자에 사용한다.02. 선언 방법final int MAX_VALUE = 100;// 리터럴 = 100// 상수 = MAX_VALUE  • final을 사용하여 상수를 선언한다.• 상수명을 대문자로 선언해준다.대문자로 선언하여, 해당 변수가 변하지 않는 값인 상수임을 표현해주어, 코드의 가독성을 높일 수 있다."
  },
  
  {
    "title": "JAVA study (05) - 전위,후위 증감 연산자",
    "url": "/posts/JAVA-study-(05)-%EC%A0%84%EC%9C%84,%ED%9B%84%EC%9C%84-%EC%A6%9D%EA%B0%90-%EC%97%B0%EC%82%B0%EC%9E%90/",
    "categories": "Java, Study",
    "tags": "Java, JavaSpring",
    "date": "2024-03-12 00:00:00 +0900",
    





    
    "snippet": "🔎 전위, 후위 증감 연산자란?01. \b전위 증감 연산자++a , --a전위 증감 연산자는 연산자가 변수의 앞에 있고,변수의 값을 먼저 증가시키거나 감소시킨 후 값을 대입해준다.02. 후위 증감 연산자a++ , a--후위 증감 연산자는 연산자가 변수의 앞에 있고,변수의 값을 먼저 사용하고, 그 이후 값을 증가시키거나 감소시킨다.03. 코드 예시1) 전...",
    "content": "🔎 전위, 후위 증감 연산자란?01. \b전위 증감 연산자++a , --a전위 증감 연산자는 연산자가 변수의 앞에 있고,변수의 값을 먼저 증가시키거나 감소시킨 후 값을 대입해준다.02. 후위 증감 연산자a++ , a--후위 증감 연산자는 연산자가 변수의 앞에 있고,변수의 값을 먼저 사용하고, 그 이후 값을 증가시키거나 감소시킨다.03. 코드 예시1) 전위 증감 연산자public static void main(String[] args) {      int a = 1;      int b = 0;        b = ++a; //a의 값을 먼저 증가시키고, 그 결과를 b에 대입      System.out.println(\"a = \" + a + \", b = \" + b);        // a = 2, b = 2}  위의 코드를 실행시켰을 때, a = 2, b = 2 라는 값이 출력된다.이는 a의 값에 먼저 1의 값을 증가 시킨 후, 그 값을 b에 대입해주었기 때문에a와 b는 모두 2라는 값을 가지고 출력이 된다.2) 후위 증감 연산자public static void main(String[] args) {      int a = 1;      int b = 0;        b = a++; //a의 현재 값을 b에 먼저 대입하고, 그 후 a 값을 증가시킨다.    System.out.println(\"a = \" + a + \", b = \" + b);        // a = 2, b = 1}  위의 코드를 실행시켰을 때, a = 2, b = 1 라는 값이 출력된다.이는 먼저 b에 기존 a의 값을 대입해주고 난 후, a에 1을 증가시키기 때문이다.따라서 a = 2, b = 1의 값이 출력되게 된다."
  },
  
  {
    "title": "JAVA 문법 (02) - 변수 명명 규칙",
    "url": "/posts/JAVA-%EB%AC%B8%EB%B2%95-(02)-%EB%B3%80%EC%88%98-%EB%AA%85%EB%AA%85-%EA%B7%9C%EC%B9%99/",
    "categories": "Java, Grammar",
    "tags": "Java",
    "date": "2024-03-11 00:00:00 +0900",
    





    
    "snippet": "🔎 변수(Variable)01. 변수 명명 규칙  자바에서 변수의 이름을 짓는데는 규칙과 관례가 있다.\t- 규칙은 필수\t- 관례는 선택관례는 필수는 아니지만, 전세계 개발자가 해당 관례를 따르기 때문에 사실상 규칙이라고 생각해도 된다.02. 규칙  • 변수 이름은 숫자로 시작할 수 없다 (예: 1num, 1first)• 변수 이름에는 공백이 들어갈 수...",
    "content": "🔎 변수(Variable)01. 변수 명명 규칙  자바에서 변수의 이름을 짓는데는 규칙과 관례가 있다.\t- 규칙은 필수\t- 관례는 선택관례는 필수는 아니지만, 전세계 개발자가 해당 관례를 따르기 때문에 사실상 규칙이라고 생각해도 된다.02. 규칙  • 변수 이름은 숫자로 시작할 수 없다 (예: 1num, 1first)• 변수 이름에는 공백이 들어갈 수 없다.• 자바의 예약어를 변수 이름으로 사용할 수 없다.(예: int, class, public, static 등등)• 변수 이름에는 \b영문자, 숫자, 달러 기호 또는 언더바(_) 만 사용할 수 있다.03. 관례  • 소문자로 시작하는 Camel Case ( 낙타 표기법 ) (예 : myName, randomNumberList)04. 올바른 예시\bString firstName = \"예현\"String lastName = \"김\""
  },
  
  {
    "title": "JAVA 문법 (01) - 변수 Variable",
    "url": "/posts/JAVA-%EB%AC%B8%EB%B2%95-(01)-%EB%B3%80%EC%88%98-Variable/",
    "categories": "Java, Grammar",
    "tags": "Java",
    "date": "2024-03-11 00:00:00 +0900",
    





    
    "snippet": "🔎 변수(Variable)01. 변수란?  변수(Variable)는 데이터를 저장하는 공간이다.변수는 특정 데이터 타입을 가지며, 이 데이터 타입에 따라 저장할 수 있는 데이터의 종류와 크기가 결정된다. 변수를 사용하면 데이터를 보다 쉽게 관리할 수 있고, 코드 내에서 값을 재사용하거나 변경할 수 있다.02. 왜 사용해야하나?public class V...",
    "content": "🔎 변수(Variable)01. 변수란?  변수(Variable)는 데이터를 저장하는 공간이다.변수는 특정 데이터 타입을 가지며, 이 데이터 타입에 따라 저장할 수 있는 데이터의 종류와 크기가 결정된다. 변수를 사용하면 데이터를 보다 쉽게 관리할 수 있고, 코드 내에서 값을 재사용하거나 변경할 수 있다.02. 왜 사용해야하나?public class Var1 {      public static void main(String[] args) {          System.out.println(10);          System.out.println(10);          System.out.println(10);      }  }//10//10//10위의 코드는 숫자 10을 3번 출력시키는 코드이다. 만약 여기서 우리가 10 -&gt; 20으로 출력하고 싶으면, 어떻게 해야할까?public class Var1 {      public static void main(String[] args) {          System.out.println(20);          System.out.println(20);          System.out.println(20);      }  }//10//10//10답은 간단하다. 10을 모두 20으로 바꿔주면 된다.하지만, 코드의 양이 방대하다고 가정해보면, 10을 20으로 수없이 많이 바꿔줘야 한다.모든 프로그래밍 언어는 이런 문제를 해결하기 위해 변수(variable)라는 기능을 제공한다. 변수는 이름 그대로 변할 수 있다는 뜻이다.03. 변수 선언하기int a;자바에서 변수를 선언하는 방법은타입 변수명 = 값; 으로 선언할 수 있다.위에 코드를 해석해보면 숫자 정수타입(integer)인 a라는 그릇 으로 해석할 수 있다.int c,d한번에 여러 변수를 선언할 수도 있다.04. 변수 초기화int a;  a = 1;변수를 선언하고, 선언한 변수에 처음으로 값을 저장하는 것을 변수 초기화 라고 한다.위의 코드는 a라는 변수를 선언하고, a에 초기값으로 정수 1의 값을 저장한것을 볼 수 있다.05. 변수를 초기화하지 않는다면?public class Var6 {     public static void main(String[] args) {\t\tint a;\t\tSystem.out.println(a); //주석을 풀면 컴파일 에러 발생 \t}}컴퓨터에서 메모리는 여러 시스템이 함께 사용하는 공간이다.따라서 다양한 프로그램, 브라우저 등등의 시스템에 의해 값이 계속 저장된다.하지만 초기값을 주지 않은 변수는 해당 메모리 공간에 어떤 값이 있었는지 아무도 모른다.이로인해, 값을 초기화 하지 않으면 이상한 값이 출력될 수 있는데, 이런 문제를 예방하기 위해 자바는 변수를 초기화 하도록 강제한다."
  },
  
  {
    "title": "mySQL 문법 (09) - UPDATE 데이터 수정하기",
    "url": "/posts/mySQL-%EB%AC%B8%EB%B2%95-(09)-UPDATE-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0/",
    "categories": "mySQL, Grammarㅤ",
    "tags": "mySQL",
    "date": "2024-03-08 00:00:00 +0900",
    





    
    "snippet": "💡UPDATE01. UPDATE  The UPDATE statement is used to modify the existing records in a table.UPDATE 는 테이블의 기존 데이터 값을 수정하는데 사용한다.02. 주의사항  반드시 WHERE절을 사용하여 특정 데이터만 수정하는데 사용하자. 그렇지 않으면 모든 기록이 업데이트 될 수 있...",
    "content": "💡UPDATE01. UPDATE  The UPDATE statement is used to modify the existing records in a table.UPDATE 는 테이블의 기존 데이터 값을 수정하는데 사용한다.02. 주의사항  반드시 WHERE절을 사용하여 특정 데이터만 수정하는데 사용하자. 그렇지 않으면 모든 기록이 업데이트 될 수 있기 때문..💡문법 Syntax01. \b특정한 컬럼의 데이터값을 수정할 때UPDATE 테이블명 SET 컬럼1 = '변경할 값' WHERE 조건1;02. \b여러개 컬럼의 데이터값을 수정할 때UPDATE 테이블명 SET 컬럼1 = '변경할 값', 컬럼2 = '변경할 값' WHERE 조건1;💡사용예시01. 여러개의 컬럼 데이터 수정하기UPDATE Customers  SET ContactName = 'Alfred Schmidt', City = 'Frankfurt'  WHERE CustomerID = 1;  • 조건 1 : CustomerID 가 1• 해석 : \b고객 테이블 고객 아이디가 1인 고객의 이름과 도시명을 조건처럼 바꿔줘"
  },
  
  {
    "title": "mySQL 문법 (08) - Aliases 컬럼명 변경하기",
    "url": "/posts/mySQL-%EB%AC%B8%EB%B2%95-(08)-Aliases-%EC%BB%AC%EB%9F%BC%EB%AA%85-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0/",
    "categories": "mySQL, Grammarㅤ",
    "tags": "mySQL",
    "date": "2024-03-08 00:00:00 +0900",
    





    
    "snippet": "💡Aliases01. Aliases(AS)  Aliases are used to give a table, or a column in a table, a temporary name.Aliases are often used to make column names more readable.An alias only exists for the duration o...",
    "content": "💡Aliases01. Aliases(AS)  Aliases are used to give a table, or a column in a table, a temporary name.Aliases are often used to make column names more readable.An alias only exists for the duration of that query.An alias is created with the AS keyword.AS 는 컬럼명, 테이블명에 별칭을 주어, 데이터 조회 후 가독성이 좋아보이게 만드는데 굉장히 효과적이다.AS는 해당 쿼리가 실행되었을 동안만 존재하고, 직접적으로 테이블에 영향을 주지 않는다.테이블에 별칭을 주었으면, 해당 별칭으로 컬럼들을 조회할 수 있다.💡문법 Syntax01. \b테이블에 별칭주기SELECT * FROM 테이블 AS 별칭02. \b컬럼에 별칭주기SELECT 컬럼 AS 별칭 FROM 테이블💡사용예시01. 컬럼에 별칭주기1) 하나의 컬럼 별칭주기SELECT name AS '이름' FROM customers  • 조건 1 : name 컬럼명에 ‘이름’이란 별칭주기• 해석 : \bcustomers 테이블에서 name 컬럼만 가져와주는데, 컬럼명을 ‘이름’으로 바꿔줘.2) 여러개의 컬럼에 별칭주기SELECT name AS '이름', email AS '이메일' FROM customers  • 조건 1 : name 컬럼명에 ‘이름’, email 컬럼명에 ‘이메일’ 이란 별칭주기• 해석 : \bcustomers 테이블에서 name 과 email 컬럼만 가져와주는데, 컬럼명 각각 ‘이름’, ‘이메일’ 로 바꿔줘.02. 테이블에 별칭주기1) 테이블에 별칭주기SELECT * FROM customer AS c  • 조건 1 : name 컬럼명에 ‘이름’이란 별칭주기• 해석 : \bcustomers 테이블에서 name 컬럼만 가져와주는데, 컬럼명을 ‘이름’으로 바꿔줘."
  },
  
  {
    "title": "mySQL 문법 (07) - LIMIT 원하는 데이터 수만큼 조회하기",
    "url": "/posts/mySQL-%EB%AC%B8%EB%B2%95-(07)-LIMIT-%EC%9B%90%ED%95%98%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%88%98%EB%A7%8C%ED%81%BC-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0/",
    "categories": "mySQL, Grammarㅤ",
    "tags": "mySQL",
    "date": "2024-03-08 00:00:00 +0900",
    





    
    "snippet": "💡LIMIT01. LIMIT  The LIMIT clause is used to specify the number of records to return.The LIMIT clause is useful on large tables with thousands of records. Returning a large number of records can im...",
    "content": "💡LIMIT01. LIMIT  The LIMIT clause is used to specify the number of records to return.The LIMIT clause is useful on large tables with thousands of records. Returning a large number of records can impact performance.LIMIT 절은 대량의 데이터를 조회할때 유용하게 사용할 수 있다.만약, customers라는 테이블을 조회했는데, 고객 수가 100,000,000명이면, 이를 조회하는데 컴퓨터에 무리가 갈 수 있고 시간이 굉장히 오래 걸린다.💡문법 Syntax01. \bLIMIT 숫자SELECT * FROM 테이블 LIMIT 숫자;💡사용예시01. LIMIT 예시1) 3개의 데이터만 조회하기SELECT * FROM customers LIMIT 3;  • 조건 1 : 10개만 조회• 해석 : \b고객들의 정보들 중 3개만 조회해줘2) 최근에 가입한 고객 3명 보기SELECT * FROM customers ORDER BY customer_id DESC LIMIT 3;  • 조건 1 : 고객이 가입한 아이디를 내림차순으로 정렬하고, 그중 3개만 조회• 해석 : \b고객 아이디를 내림차순으로 정렬하고, 그중 3개를 고객 테이블에서 가져와줘"
  },
  
  {
    "title": "mySQL 문법 (06) - ORDER BY 오름차순,내림차순으로 정렬하기",
    "url": "/posts/mySQL-%EB%AC%B8%EB%B2%95-(06)-ORDER-BY-%EC%98%A4%EB%A6%84%EC%B0%A8%EC%88%9C,%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/",
    "categories": "mySQL, Grammarㅤ",
    "tags": "mySQL",
    "date": "2024-03-08 00:00:00 +0900",
    





    
    "snippet": "💡ORDER BY01. ORDER BY  The ORDER BY keyword is used to sort the result-set in ascending or descending order. The ORDER BY keyword sorts the records in ascending order by default. To sort the record...",
    "content": "💡ORDER BY01. ORDER BY  The ORDER BY keyword is used to sort the result-set in ascending or descending order. The ORDER BY keyword sorts the records in ascending order by default. To sort the records in descending order, use the DESC keyword.ORDER BY 는 결과의 집합을 오름차 / 내림차순으로 정렬하는데 사용된다.💡문법 Syntax01. \bORDER BY ASC(오름차순)SELECT * FROM 테이블 ORDER BY 컬럼1 ASC, 컬럼2 ASC02. \bORDER BY DESC(내림차순)SELECT * FROM 테이블 ORDER BY 컬럼1 DESC, 컬럼2 DESC💡사용예시01. ORDER BY ASC 예시 (오름차순)1) 나이컬럼을 기준으로 오름차순으로 가져오기SELECT * FROM customers ORDER BY age ASC;  • 조건 1 : 없음• 해석 : \b나이를 오름차순으로 정렬한 고객 정보 테이블을 가져와줘  근데 한살이 어떻게 있지?;;2) 두개의 컬럼을 오름차순으로 정리하기SELECT * FROM customers ORDER BY age ASC, name ASC;  • 조건 1 : 없음• 해석 : \b나이를 오름차순으로 정렬하고, 그중 이름을 오름차순으로 정리한 고객 정보 테이블을 가져와줘03. ORDER BY DESC 예시 (내림차순)1) 나이컬럼을 기준으로 내림차순으로 가져오기SELECT * FROM customers ORDER BY age DESC;  • 조건 1 : 없음• 해석 : \b나이를 오름차순으로 정렬한 고객 정보 테이블을 가져와줘2) 두개의 컬럼을 내림차순으로 정리하기SELECT * FROM customers ORDER BY age DESC, name DESC;  • 조건 1 : 없음• 해석 : \b나이를 내림차순으로 정렬하고, 그중 이름을 내림차순으로 정리한 고객 정보 테이블을 가져와줘"
  },
  
  {
    "title": "mySQL 문법 (05) - BETWEEN, IN, LIKE",
    "url": "/posts/mySQL-%EB%AC%B8%EB%B2%95-(05)-BETWEEN,-IN,-LIKE/",
    "categories": "mySQL, Grammarㅤ",
    "tags": "mySQL",
    "date": "2024-03-08 00:00:00 +0900",
    





    
    "snippet": "💡BETWEEN, IN, LIKE01. BETWEEN  The BETWEEN operator selects values within a given range. The values can be numbers, text, or dates.The BETWEEN operator is inclusive: begin and end values are includ...",
    "content": "💡BETWEEN, IN, LIKE01. BETWEEN  The BETWEEN operator selects values within a given range. The values can be numbers, text, or dates.The BETWEEN operator is inclusive: begin and end values are included.BETWEEN 연산자는 주어진 범위 내의 값을 선택하고, 값은 숫자, 문자열 혹은 날짜일 수 있습니다.BETWEEN 연산자는 시작 및 끝 값이 포함되어있어, 조건의 값을 포괄합니다.02. \bIN  The IN operator allows you to specify multiple values in a WHERE clause.The IN operator is a shorthand for multiple OR conditions.IN 은 여러개의 값을 지정할 수 있도록 만들어줍니다.03. \bLIKE  The LIKE operator is used in a WHERE clause to search for a specified pattern in a column.There are two wildcards often used in conjunction with the LIKE  operator:\t- The percent sign (%) represents zero, one, or multiple characters\t- The underscore sign (_) represents one, single characterThe percent sign and the underscore can also be used in combinations!LIKE 는  문자열 내에서 내가 원하는 문자열 혹은 값을 찾아내는 함수입니다.LIKE 함수는 WILDCARDS 문자들과 함께 쓰이기도 합니다.            WILDCARD      설명                  %      0개 이상의 문자를 대신 표현할 수 있음              _      1개의문자를 표현      💡문법 Syntax01. \bBETWEENSELECT * FROM 테이블WHERE 컬럼 BETWEEN 조건1 and 조건2; 02. \bINSELECT * FROM 테이블WHERE 컬럼 in (조건1, 조건2, 조건3)03. \bLIKESELECT * FROM 테이블WHERE 컬럼 LIKE 조건💡사용예시01. BETWEEN 예시1) 사이값 구하기SELECT * FROM customers WHERE age BETWEEN 20 and 30;  • 조건 1 : 20 &lt;= age &lt;= 30• 해석 : customers 라는 고객 테이블에서 고객의 나이가 20~30인 고객들의 데이터를 불러와줘2) 다른 쿼리와 비교SELECT * FROM customers WHERE age BETWEEN 20 and 30;SELECT * FROM customers WHERE age &gt;= 20 and age &lt;= 30;SELECT * FROM customers WHERE age &gt; 19 and age &lt; 31;  위의 세개 쿼리는 모두 같은 값을 조회하여 결과로 보여준다.하지만 가독성을 따져보았을때 BETWEEN 이 더 간편한 가독성을 보여준다.02. IN 예시1) 여러가지 값을 한번에 필터링 할 때SELECT * FROM customers WHERE age in (29, 31, 39)  • 조건 1 : age = 29, age = 31, age = 39• 해석 : customers 라는 고객 테이블에서 고객의 나이가 29, 31, 39인 고객들의 데이터를 불러와줘03. LIKE 예시1) 같은 문자 값 찾기SELECT * FROM customers WHERE name LIKE \"김예연\";  • 조건 1 : \bname = “김예연”• 해석 : 고객 테이블에서 이름이 “김예연”이란 고객들의 정보를 가져와줘.2) 같은 숫자 값 찾기SELECT * FROM customers WHERE age LIKE 39;  • 조건 1 : \bage = 39• 해석 : 고객 테이블에서 나이가 39살인 고객들의 정보를 가져와줘.3) 마지막이 특정 문자로 끝나는 값 찾기 ‘%t’SELECT * FROM customers WHERE name LIKE '%연'  • 조건 1 : \b\bname에서 ‘연’ 문자로 끝나는 모든 값• 해석 : 고객 테이블에서 이름이 ‘연’으로 끝나는 모든 고객들의 정보를 가져와줘4) 처음이 특정 문자로 시작하는 값 찾기 ‘t%’SELECT * FROM customers WHERE name LIKE '김%'  • 조건 1 : \b\bname에서 ‘연’ 문자로 끝나는 모든 값• 해석 : 고객 테이블에서 성이 ‘김’ 씨인 모든 고객들의 정보를 가져와줘5) 가운데가 특정 문자인 값 찾기 ‘%t%’SELECT * FROM customers WHERE name LIKE '%예%'  • 조건 1 : \b\bname에서 중간에 ‘예’ 문자가 있는 모든 값• 해석 : 고객 테이블에서 이름의 가운데에 ‘예’ 가 있는 모든 고객들의 정보를 가져와줘.  %김% 으로 조회를 하면 김예연 이 조회가 된다.그 이유는, %는 어떠한 문자가 와도 상관이 없기 때문에, 김예연 도 조회를 한다.6) 문자열 개수를 정해두고, 특정 문자 조회하기 ‘(underbar)text’SELECT * FROM customers WHERE name LIKE \"_민_\"  • 조건 1 : \b\bname에서 3개의 문자로 이루어져 있고, 가운데에 ‘민’ 이라는 문자를 가지고 있는 값• 해석 : 고객 테이블에서 이름이 3자이면서, 가운데가 ‘민’ 자인 모든 고객들을 불러와줘."
  },
  
  {
    "title": "mySQL 문법 (04) - 비교연산자 종류",
    "url": "/posts/mySQL-%EB%AC%B8%EB%B2%95-(04)-%EB%B9%84%EA%B5%90%EC%97%B0%EC%82%B0%EC%9E%90-%EC%A2%85%EB%A5%98/",
    "categories": "mySQL, Grammarㅤ",
    "tags": "mySQL",
    "date": "2024-03-08 00:00:00 +0900",
    





    
    "snippet": "💡비교연산자01. \b비교연산자란 - 공식문서  Comparison operations result in a value of 1 (TRUE), 0 (FALSE), or NULL. These operations work for both numbers and strings. Strings are automatically converted to numbers...",
    "content": "💡비교연산자01. \b비교연산자란 - 공식문서  Comparison operations result in a value of 1 (TRUE), 0 (FALSE), or NULL. These operations work for both numbers and strings. Strings are automatically converted to numbers and numbers to strings as necessary.비교 연산의 결과는 1 (TRUE), 0 (FALSE) 혹은 NULL 이고, 숫자와 문자열 모두에 적용할 수 있습니다. 상황에 따라 문자열은 자동으로 숫자로 변환되고, 숫자는 문자열로 변환됩니다.02. \b비교연산자 종류            이름      설명                  &gt;      연산자보다 큼              &gt;=      크거나 같음 연산자              &lt;      미만 연산자              &lt;&gt;,!=      같지 않음 연산자              &lt;=      작거나 같음 연산자              &lt;=&gt;      NULL 안전 연산자와 같음              =      같음 연산자              BETWEEN ... AND ...      값이 값 범위 내에 있는지 여부              COALESCE()      NULL이 아닌 첫 번째 인수를 반환합니다.              GREATEST()      가장 큰 인수를 반환합니다.              IN()      값이 값 집합 내에 있는지 여부              INTERVAL()      첫 번째 인수보다 작은 인수의 인덱스를 반환합니다.              IS      부울에 대해 값 테스트              IS NOT      부울에 대해 값 테스트              IS NOT NULL      NOT NULL 값 테스트              IS NULL      NULL 값 테스트              ISNULL()      인수가 NULL인지 테스트              LEAST()      가장 작은 인수를 반환합니다.              LIKE      단순 패턴 매칭              NOT BETWEEN ... AND ...      값이 값 범위 내에 있지 않은지 여부              NOT IN()      값이 값 집합 내에 있지 않은지 여부              NOT LIKE      단순 패턴 매칭의 부정              STRCMP()      두 문자열 비교      &lt;=&gt; 는 처음알아서 조금 알아본 결과..  SQL에서 NULL과의 모든 연산은 NULL을 반환하는데, 이를 피하기 위해 mySQL은 &lt;=&gt; 라는 연산자를 제공합니다."
  },
  
  {
    "title": "mySQL 문법 (03) - AND, OR, NOT 연산자",
    "url": "/posts/mySQL-%EB%AC%B8%EB%B2%95-(03)-AND,-OR,-NOT-%EB%85%BC%EB%A6%AC%EC%97%B0%EC%82%B0%EC%9E%90/",
    "categories": "mySQL, Grammarㅤ",
    "tags": "mySQL",
    "date": "2024-03-08 00:00:00 +0900",
    





    
    "snippet": "💡AND, OR, NOT 논리연산자01. \bAND  The AND operators are used to filter records based on more than one condition:AND 연산자는 두개의 조건이 모두 true 인 경우의 데이터를 필터링 합니다.AND 연산자는 WHERE절과 조합하여 사용할 수 있습니다.02. \bOR  The ...",
    "content": "💡AND, OR, NOT 논리연산자01. \bAND  The AND operators are used to filter records based on more than one condition:AND 연산자는 두개의 조건이 모두 true 인 경우의 데이터를 필터링 합니다.AND 연산자는 WHERE절과 조합하여 사용할 수 있습니다.02. \bOR  The OR operators are used to filter records based on more than one condition:OR 연산자는 두개중 하나의 조건이 true 인 경우의 데이터를 필터링 합니다.OR 연산자는 WHERE절과 조합하여 사용할 수 있습니다.03. \bNOT  The NOT operator displays a record if the condition(s) is NOT TRUE.NOT 연산자는 조건이 true가 아닌 경우의 데이터를 필터링 합니다.NOT 연산자는 WHERE절과 조합하여 사용할 수 있습니다.💡문법 Syntax01. \bAND 구문SELECT * FROM 테이블WHERE 조건1 AND 조건2 AND 조건3 ...;02. OR 구문SELECT * FROM 테이블WHERE 조건1 OR 조건2 OR 조건3 ...;03. NOT 구문SELECT * FROM 테이블WHERE \bNOT 조건1;💡사용예시01. AND 예시SELECT * FROM food_orders WHERE cuisine_type = 'Korean' AND price &gt; 20000;  • 조건 1 : cuisin_type = ‘Korean’• 조건 2 : price &gt; 20000• 해석 : \bfood_orders 라는 테이블에서 모든 컬럼을 선택하는데, 그중 가격이 20,000원 이상인 한식 데이터를 모두 보여줘02. OR 예시SELECT * FROM food_orders WHERE cuisine_type = 'Korean' OR price &gt; 20000;  • 조건 1 : cuisin_type = ‘Korean’• 조건 2 : price &gt; 20000• 해석 : \bfood_orders 라는 테이블에서 모든 컬럼을 선택하는데, 그중 가격이 20,000원 이거나, 한식인 데이터를 모두 보여줘두개의 조건중 하나를 충족하는 데이터를 불러온다. 위의 AND 보다 많은 데이터가 조회된 것을 볼 수 있다.03. NOT 예시SELECT * FROM food_orders WHERE NOT cuisine_type = 'Korean'  • 조건 1 : cuisin_type = ‘Korean’ 이외• 해석 : \bfood_orders 라는 테이블에서 모든 컬럼을 선택하는데, 그중 음식타입이 한식이 아닌 모든 데이터를 보여줘음식타입이 ‘Korean’ 이 아닌 모든 데이터를 조회한다"
  },
  
  {
    "title": "mySQL 문법 (02) - WHERE 조건에 맞는 데이터만 가져오기",
    "url": "/posts/mySQL-%EB%AC%B8%EB%B2%95-(02)-WHERE-%EC%A1%B0%EA%B1%B4%EC%97%90-%EB%A7%9E%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A7%8C-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/",
    "categories": "mySQL, Grammarㅤ",
    "tags": "mySQL",
    "date": "2024-03-08 00:00:00 +0900",
    





    
    "snippet": "💡WHERE01. WHERE 절이란  The WHERE clause is used to filter records.It is used to extract only those records that fulfill a specified condition.WHERE 절은 데이터를 필터링하여 원하는 조건에 맞는 데이터를 불러오는데 사용된다.여기서, 데이터 조...",
    "content": "💡WHERE01. WHERE 절이란  The WHERE clause is used to filter records.It is used to extract only those records that fulfill a specified condition.WHERE 절은 데이터를 필터링하여 원하는 조건에 맞는 데이터를 불러오는데 사용된다.여기서, 데이터 조회 뿐만 아닌, UPDATE, DELETE 등 에서도 사용이 가능하다.💡문법 Syntax01. 한개의 데이터 필터링하기SELECT * FROM 테이블WHERE 조건 = \"값\"02. 한개 이상의 데이터 필터링하기SELECT * FROM 테이블WHERE 조건 = 값 and 조건 = 값💡사용예시01. 특정 데이터만 필터링 하기SELECT * FROM food_orders WHERE cuisine_type = 'Korean';food_orders 라는 테이블에서 모든 컬럼을 선택하는데, 그중 \b한식을 판매하는 모든 데이터를 모여줘02. 한개 이상의 데이터 필터링 하기SELECT * FROM food_orders WHERE cuisine_type = 'Korean' and price &gt; 20000;WHERE 절에 한개 이상의 데이터를 필터링 하고 싶으면, and 를 사용하면 된다.위의 쿼리를 해석하면, food_orders 라는 테이블에서 모든 컬럼을 선택하는데, 그중 가격이 20,000원 이상인 한식 데이터를 모두 보여줘"
  },
  
  {
    "title": "mySQL 문법 (01) - SELECT,  FROM 데이터 조회하기",
    "url": "/posts/mySQL-%EB%AC%B8%EB%B2%95-(01)-SELECT,-FROM-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A1%B0%ED%9A%8C%ED%95%98%EA%B8%B0/",
    "categories": "mySQL, Grammarㅤ",
    "tags": "mySQL",
    "date": "2024-03-08 00:00:00 +0900",
    





    
    "snippet": "SELECT, FROM01. SELECTSELECT 는 데이터를 가져오는 기본 명령어로, 데이터를 조회하는 모든 Query에 사용된다.기본적으로 컬럼을 선택한다고 생각하면 된다.02. FROMFROM 은 데이터를 가져올 테이블을 특정해주는 명령어이다.기본적으로 테이블을 선택한다고 생각하면 된다.문법보기01. 테이블의 모든 컬럼 불러오기select * ...",
    "content": "SELECT, FROM01. SELECTSELECT 는 데이터를 가져오는 기본 명령어로, 데이터를 조회하는 모든 Query에 사용된다.기본적으로 컬럼을 선택한다고 생각하면 된다.02. FROMFROM 은 데이터를 가져올 테이블을 특정해주는 명령어이다.기본적으로 테이블을 선택한다고 생각하면 된다.문법보기01. 테이블의 모든 컬럼 불러오기select * from food_orders위의 쿼리를 해석하면, food_orders 라는 테이블에서 모든 컬럼을 선택해서 가져와줘 가 된다.02. 테이블의 원하는 컬럼 불러오기select order_id, restaurant_name from food_orders위의 쿼리를 해석하면, food_orders 라는 테이블에서 order_id / restaurant_name 컬럼을 선택해서 가져와줘 가 된다."
  },
  
  {
    "title": "JAVA study (04) - Maven, Gradle 차이점",
    "url": "/posts/JAVA-study-(04)-Maven,-Gradle-%EC%B0%A8%EC%9D%B4%EC%A0%90/",
    "categories": "Java, Study",
    "tags": "Java, JavaSpring",
    "date": "2024-02-29 00:00:00 +0900",
    





    
    "snippet": "메이븐(Maven) 이란?01. \b메이븐 정의Maven은 주로 Java 개발에 사용되는 프로젝트 관리 빌드 도구 이다.  Apache Ant의 대안으로 만들어 졌으며, Apache Software Foundation에서 호스팅하는 Maven은 자카르타 프로젝트의 일부로 시작되었다고 한다.02. 메이븐 특징  빌드 절차를 간소화  정형화된 빌드 시스템을...",
    "content": "메이븐(Maven) 이란?01. \b메이븐 정의Maven은 주로 Java 개발에 사용되는 프로젝트 관리 빌드 도구 이다.  Apache Ant의 대안으로 만들어 졌으며, Apache Software Foundation에서 호스팅하는 Maven은 자카르타 프로젝트의 일부로 시작되었다고 한다.02. 메이븐 특징  빌드 절차를 간소화  정형화된 빌드 시스템을 제공  프로젝트 정보를 제공  Pom.xml 파일을 통해 프로젝트를 빌드    03. 메이븐의 LifeCycle  미리 정의하고 있는 빌드 순서를 라이프사이클이라고 한다.각 빌드 단계를 phase라 하며 각 phase들은 서로 의존 단계를 가지고 있는데,메이븐은 프로젝트 생성에 필요한 단계(phase)들을 Build LifeCycle 이라고 하고,default, clean, site 세가지로 표준 정의한다.  clean : 빌드 시 생성되었던 산출물을 삭제          pre-clean : clean 작업 전에 사전작업      clean : 이전 빌드에서 생성된 모든 파일 삭제      post-clean : 사후작업        default : 프로젝트 배포절차, 패키지 타입별로 다르게 정의됌          validate : 프로젝트 상태 점검, 빌드에 필요한 정보 존재유무 체크      initialize : 빌드 상태를 초기화, 속성 설정, 작업 디렉터리 생성      generate-sources : 컴파일에 필요한 소스 생성      process-sources : 소스코드를 처리      generate-resources : 패키지에 포함될 자원 생성      compile : 프로젝트의 소스코드를 컴파일      process-classes : 컴파일 후 후처리      generate-test-source : 테스트를 위한 소스 코드를 생성      process-test-source : 테스트 소스코드를 처리      generate-test-resources : 테스팅을 위한 자원 생성      process-test-resources : 테스트 대상 디렉터리에 자원을 복사하고 가공      test-compile : 테스트 코드를 컴파일      process-test-classes : 컴파일 후 후처리      test : 단위 테스트 프레임워크를 이용해 테스트 수행      prepare-package : 패키지 생성 전 사전작업      package : 개발자가 선택한 war, jar 등의 패키징 수행      pre-integration-test : 통합테스팅 전 사전작업      integration-test : 통합테스트      post-integration : 통합테스팅 후 사후작업      verify : 패키지가 품질 기준에 적합한지 검사      install : 패키지를 로컬 저장소에 설치      deploy : 패키지를 원격 저장소에 배포        site : 프로젝트 문서화 절차          pre-site : 사전작업      site : 사이트문서 생성      post-site : 사후작업 및 배포 전 사전작업      site-deploy : 생성된 문서를 웹 서버에 배포      그래들 (\bGradle) 이란?01. \b그래들의 정의Gradle은 다국어 소프트웨어 개발을 위한 빌드 자동화 도구 이다. 컴파일과 패키징부터 테스트, 배포, 게시까지의 작업에서 개발 프로세스를 제어한다.02. \b그래들의 특징  설정 주입 방식(Configuration Injection)을 사용  오픈소스 기반의 빌드 자동화 시스템으로 Groovy** 기반 DSL(Domain-Specific-Language)로 작성한다.  **Groovy : JVM에서 실행되는 스크립트 언어  src/main/java : 배포할 자바 소스코드 디렉토리  src/main/resources : 배포한 설정 파일 디렉토리  gradle/wrapper 디렉토리 : 내장 task wrapper. 개발자들이 직접 gradle을 설치하지 않아도 빌드가 가능하다.  gradlew : 리눅스 또는 맥 OS 용 실행 쉘 스크립트 파일이다.  gradlew.bat : 윈도우용 실행 배치 스크립트 파일이다.  gradle-wrapper.jar : JAR 형식으로 압축된 wrapper파일이다. gradlew나 gradlew.bat 파일이 프로젝트 안에 설치되는 이 파일을 사용하여 gradle task를 실행한다.  gradle-wrapper.properties : gradle wrapper 설정정보 파일이다. wrapper의 버전등을 확인할 수 있다.  build.gradle : 프로젝트의 라이브러리 의존성, 플러그인, 라이브러리 저장소등을 설정하는 빌드 스크립트 파일이다.  settings.gradle : 프로젝트의 구성 정보 파일. 멀티 프로젝트를 구성하여 프로젝트를 모듈화할 경우, 하위 프로젝트의 구성을 설정할 수 있다."
  },
  
  {
    "title": "JavaSpring 플러그인 (02) - Spring Boot Devtools",
    "url": "/posts/JavaSpring-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-(02)-Spring-Boot-Devtools/",
    "categories": "JavaSpring, Pluginㅤ",
    "tags": "Java, JavaSpring",
    "date": "2024-02-27 00:00:00 +0900",
    





    
    "snippet": "Spring Boot Devtools - 서버 자동 재가동Spring Boot Devtools소스의 변경이 일어날 때마다 스프링부트의 로컬 서버를 매번 재실행 해줘야하는 번거로움이 있었다..  소스 변경  로컬 서버 재실행  웹사이트 새로고침하지만, Spring Boot Devtools 를 사용하면 소스의 변경이 일어났을때 서버를 재시작하지 않아도, ...",
    "content": "Spring Boot Devtools - 서버 자동 재가동Spring Boot Devtools소스의 변경이 일어날 때마다 스프링부트의 로컬 서버를 매번 재실행 해줘야하는 번거로움이 있었다..  소스 변경  로컬 서버 재실행  웹사이트 새로고침하지만, Spring Boot Devtools 를 사용하면 소스의 변경이 일어났을때 서버를 재시작하지 않아도, 서버가 자동으로 재가동 시켜주는 매우 편리한 플러그인이다.01. build.gradle에 플러그인 추가아래의 코드를 build.gradle 파일에 추가해준다.dependencies {      developmentOnly 'org.springframework.boot:spring-boot-devtools'}02. Intellij 세팅 변경 (Compiler)Settings -&gt; Build, Execution, Deployment -&gt; Compiler인텔리제이의 세팅에서 위의 경로로 이동하여, Build project automatically 를 체크(active) 한다.03. Intellij 세팅 변경 (Advanced Settings)Settings -&gt; Advanced Settings인텔리제이의 세팅에서 위의 경로로 이동하여, Allow auto-make to start even if developed application is currently running.을 체크(active) 한다.04. application.properties파일에 설정 추가  Html Reload 를 위한 코드spring.thymeleaf.cache=false spring.thymeleaf.prefix=file:src/main/resources/templates/  \bCSS, Js Reload 를 위한 코드spring.resources.static-locations=file:src/main/resources/static/05. Chrome 확장자 추가 (LiveReload)크롬에서 LiveReload 라는 확장자 프로그램을 설치한다.06. 마무리하기설치가 완료되면, 인텔리제이에서 html 및 소스코드를 수정했을때 정상적으로 서버가 자동으로 재실행 되어 서버를 수동으로 재가동 시킬 필요가 없어진다. 개발을 할 때 시간을 줄여주는 아주 고마운 플러그인이였다."
  },
  
  {
    "title": "JavaSpring 플러그인 (01) - thymeleaf",
    "url": "/posts/JavaSpring-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-(01)-thymeleaf/",
    "categories": "JavaSpring, Pluginㅤ",
    "tags": "JavaSpring, Plugin_",
    "date": "2024-02-27 00:00:00 +0900",
    





    
    "snippet": "thymeleaf - HTML 동적 렌더링thymeleaf(타임리프)타임리프는 백엔드 서버에서 Html을 동적으로 렌더링  Java Template Engine 이다.해당 플러그인의 주요 목적은 유지 관리가 수월한 템플릿을 작성하도록 지원해주고, 타임리프의 핵심 기능인 Natural Template 을 통해 제공해주는데, 서버 사이드 렌더링을 하는데 ...",
    "content": "thymeleaf - HTML 동적 렌더링thymeleaf(타임리프)타임리프는 백엔드 서버에서 Html을 동적으로 렌더링  Java Template Engine 이다.해당 플러그인의 주요 목적은 유지 관리가 수월한 템플릿을 작성하도록 지원해주고, 타임리프의 핵심 기능인 Natural Template 을 통해 제공해주는데, 서버 사이드 렌더링을 하는데 필요한 데이터 값이 없더라도, 프로토 타입으로서의 역할을 해줄 수 있는 걸 말한다.이 특징이 기존 Java Template Engine 중의 하나인 Jsp 와 가장 다른 점인데 Jsp 는 화면을 보기 위해선 서버의 도움이 필요하다. 그치만 Thymeleaf 는 서버의 도움없이 프로토 타입 형태로도 뷰를 볼 수 있다.그렇기 때문에 Thymeleaf 를 사용한다면 디자인팀과 개발팀 사이에 생길 수 있는 커뮤니케이션 비용을 줄여줄 수 있다.01. thymeleaf 가 제공해주는 Template 6가지  HTML  CSS  Javascript  TEXT  Raw  XML02. Thymeleaf 라이브러리 추가bulid.gradle 파일에서 의존성 라이브러리를 추가해준다.dependencies {      implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'    implementation 'org.springframework.boot:spring-boot-starter-web'      testImplementation 'org.springframework.boot:spring-boot-starter-test'  }03. Thymeleaf 기본 경로타임리프는 기본적으로 templates 폴더(root) 안에 있는 파일들을 기준으로 타임리프의 기능을 실행시켜주기 때문에,  templates 폴더가 없을경우 생성해 주어야하고, 테스트를 위해 폴더 안에 hello.html 파일도 생성해 주었다.프로젝트 디렉터리(root) &gt; src &gt; main &gt; resources &gt; templates"
  },
  
  {
    "title": "JavaSpring - 스프링 부트 스타터 사이트로 스프링 프로젝트 생성하기",
    "url": "/posts/JavaSpring-%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-%EC%8A%A4%ED%83%80%ED%84%B0-%EC%82%AC%EC%9D%B4%ED%8A%B8%EB%A1%9C-%EC%8A%A4%ED%94%84%EB%A7%81-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/",
    "categories": "JavaSpring, Install　",
    "tags": "Java, JavaSpring",
    "date": "2024-02-26 00:00:00 +0900",
    





    
    "snippet": "스프링 부트 스타터 사이트로 스프링 프로젝트 생성하기01. 스프링 부트 스타터 사이트로 스프링 프로젝트 생성하기예전의 스프링 프로젝트는 정말 밑바닥 부터 다 만들었는데, 요즘에는 SpringBoot 를 기반으로 프로젝트를 만든다. 아래 사이트로 이동하자.  https://start.spring.io/02. https://start.spring.io 에...",
    "content": "스프링 부트 스타터 사이트로 스프링 프로젝트 생성하기01. 스프링 부트 스타터 사이트로 스프링 프로젝트 생성하기예전의 스프링 프로젝트는 정말 밑바닥 부터 다 만들었는데, 요즘에는 SpringBoot 를 기반으로 프로젝트를 만든다. 아래 사이트로 이동하자.  https://start.spring.io/02. https://start.spring.io 에 대해 알아보기해당 사이트에 접속하면 아래와 같은 화면을 볼 수 있다.프로젝트를 선택하는 단계에서, Maven Project 와 Gradle Project 가 있는데,Maven은 개발자가 사용할 라이브러리를 땡겨 오고 빌드하는 라이프 사이클까지 관리해주는 툴이다.하지만 요즘에는** 대부분 Gradle을 많이 사용한다.**Maven 과 Gradle의 차이"
  },
  
  {
    "title": "JAVA Install (01) - MacOS 에 JAVA 17설치하기",
    "url": "/posts/JAVA-Install-(01)-MacOS-%EC%97%90-JAVA-17%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/",
    "categories": "Java, Installㅤ",
    "tags": "Java",
    "date": "2024-02-25 00:00:00 +0900",
    





    
    "snippet": "MacOS에 JAVA 11설치하기01. 터미널을 실행하여 자바 설치 여부 및 버전 확인터미널(terminal)을 열어 java --version 이라 입력후 엔터를 치면 나의 맥북에 Java 설치 유무 및 버전 체크가 가능하다.  아직까지 자바가 설치되지 않았다고 나와있다.02. oracle의 java downloads 사이트 접속다운로드 사이트에 접...",
    "content": "MacOS에 JAVA 11설치하기01. 터미널을 실행하여 자바 설치 여부 및 버전 확인터미널(terminal)을 열어 java --version 이라 입력후 엔터를 치면 나의 맥북에 Java 설치 유무 및 버전 체크가 가능하다.  아직까지 자바가 설치되지 않았다고 나와있다.02. oracle의 java downloads 사이트 접속다운로드 사이트에 접속해서, MacOS 운영체제를 선택해주고, 내가 사용하는 맥북은 ARM 기반이므로,  ARM64 DMG Installer 를 다운로드 받았다. 본인에게 적절한 파일을 찾아 다운로드 해도 된다.  인텔의 경우, x64 파일을 다운로드 받으면 된다.03. 자바 설치자기가 설치할 파일 경로를 잘 설정하고, 계속 다음을 눌러 설치완료한다.04. 자바 설치 확인다시 터미널로 가서, java --version을 입력하여 자바가 잘 설치 되었는지 확인한다.05. 환경변수 설정간단하게 Java의 경로가 어디있는지 확인할 수 있는 환경변수를 설정하겠다.먼저, 본인이 설치한 Java의 경로를 터미널로 열어준다. 만약, 본인이 설정한 경로를 모르겠다 하면,cd /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home 를 터미널에 입력하자.  다운로드 받은 파일이 다를경우, 경로 중간의 [jdk-21.jdk] 의 폴더명이 다를 수있다.그럴경우, Library 부터 차근차근 폴더를 타고 올라가는걸 추천한다.1) 터미널에 vi ~/.zshrc를 입력해 환경설정창을 열어준다.2) i 키를 눌러 INSERT 모드로 전환한다.3) 아래 세개를 기입한다. (이미지 참고)  export JAVA_HOME=/Library/Java/JavaVirtualMachines/zulu-11.jdk/Contents/Home/bin  export CLASSPATH=/Library/Java/JavaVirtualMachines/zulu-11.jdk/Contents/Home/lib  export PATH=${PATH}:$JAVA_HOME/bin**4) ESC를 누르고 :wq 를 눌러 저장하고 INSERT 모드를 종료한다.5) source ~/.zshrc 입력 (변경된 내용 저장)06. 환경변수 설정 확인터미널에 echo $JAVA_HOME 와 java -version 를 입력해보면, 현재 저장되어있는 자바 경로와 버전이 나타나는 걸 볼 수 있다."
  },
  
  {
    "title": "JAVA study (03) - 정적 컨텐츠",
    "url": "/posts/JAVA-study-(03)-%EC%A0%95%EC%A0%81-%EC%BB%A8%ED%85%90%EC%B8%A0/",
    "categories": "Java, Study",
    "tags": "Java",
    "date": "2024-02-18 00:00:00 +0900",
    





    
    "snippet": "Static Content (정적 컨텐츠)01. 정적 컨텐츠정적 컨텐츠는 서버에서 데이터를 클라이언트로 보내주는게 아닌, 파일을 그대로 웹 브라우저에게 보내주는것을 정적 컨텐츠라고 한다.요즘 많이 사용하고 있는 MVC(Model / View / Controller)는 동적 컨텐츠 인데, 둘의 차의점은MVC경우 jsp, php 등 서버에서 프로그래밍을 ...",
    "content": "Static Content (정적 컨텐츠)01. 정적 컨텐츠정적 컨텐츠는 서버에서 데이터를 클라이언트로 보내주는게 아닌, 파일을 그대로 웹 브라우저에게 보내주는것을 정적 컨텐츠라고 한다.요즘 많이 사용하고 있는 MVC(Model / View / Controller)는 동적 컨텐츠 인데, 둘의 차의점은MVC경우 jsp, php 등 서버에서 프로그래밍을 해서 클라이언트에게 동적으로 전달한다.하지만 정적 컨텐츠는 웹 브라우저에게 그대로 전달하는 방식이다.spring boot에서는 정적 컨텐츠 기능을 기본적으로 제공을 하고 있다.02. 코드로 작성해보기먼저, resources -&gt; static 폴더 안에 hello-static.html 이라는 파일을 생성하였다.해당 파일을 로컬서버에서 정상적으로 노출이 되는지 확인을 위해, 아래의 주소를 url 창에 입력하였다.  localhost:8080/hello-static.html위의 이미지처럼 html 파일이 웹 브라우저에 노출이 되는것을 알 수 있었다. 지금까지의 과정이 실행되는 순서를 정리해 보자면,1) 웹 브라우저에서 요청2) 톰캣 서버에서 스프링 컨테이너에게 요청을 전달3) controller에 hello-static 이 있는지 확인4) controller에 hello-static이 없을을 확인하면 spring-boot가 resources 폴더 안에 hello-static 이 있는지 찾아서 반환03. 마무리정적 컨텐츠를 사용하면 빠르게 나의 코드를 웹 브라우저 상에서 확인할 수 있지만, 데이터를 불러오는데에는 어느정도 한계가 있을 것 같다. 간단한 프론트 코드 작성에는 유용할 것으로 보인다."
  },
  
  {
    "title": "JAVA study (02) - 변수 타입과 메모리 공간",
    "url": "/posts/JAVA-study-(02)-%EB%B3%80%EC%88%98-%ED%83%80%EC%9E%85%EA%B3%BC-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B3%B5%EA%B0%84/",
    "categories": "Java, Study",
    "tags": "Java",
    "date": "2024-02-18 00:00:00 +0900",
    





    
    "snippet": "🔎 변수 타입01. 변수 타입이란?  자바는 정적 타입 언어로, 프로그램이 실행되기 전에 모든 변수의 타입이 결정되어야 한다. 이러한 특성 때문에 변수 타입을 명시적으로 지정하는 것이 필요하다.02. 변수 타입을 지정하는 이유1) 타입 안정성 변수 타입을 사전에 지정함으로써, 컴파일러는 타입 체크를 통해 타입 불일치로 인한 오류를 미리 잡아낼 수 있다...",
    "content": "🔎 변수 타입01. 변수 타입이란?  자바는 정적 타입 언어로, 프로그램이 실행되기 전에 모든 변수의 타입이 결정되어야 한다. 이러한 특성 때문에 변수 타입을 명시적으로 지정하는 것이 필요하다.02. 변수 타입을 지정하는 이유1) 타입 안정성 변수 타입을 사전에 지정함으로써, 컴파일러는 타입 체크를 통해 타입 불일치로 인한 오류를 미리 잡아낼 수 있다. 예를 들어, 정수형 변수(int)에 문자열을 할당하려고 시도한다면, 컴파일 단계에서 오류를 발생시켜 프로그래머가 이를 수정할 수 있도록 도와준다. 이는 프로그램의 안정성을 높이는 중요한 요소이다.2) 메모리 관리 JVM(자바 가상 머신)은 해당 변수에 필요한 메모리의 양을 정확히 알 수 있다.예를 들어, int 타입은 4바이트의 메모리를 사용하고, double 타입은 8바이트 메모리를 사용한다.변수에 적합한 메모리 공간을 할당함으로써 사용을 최적화 할 수 있다.3) 가독성과 유지보수 변수 타입을 지정하면, 코드를 읽는 사람이 해당 변수가 어떤 종류의 데이터를 저장하고 있는지 쉽게 이해할 수 있다.4) 성능 최적화 컴파일러는 타입 정보를 사용하여 최적의 기계어 코드를 생성할 수 있다. 타입이 명확하면, 컴파일러는 더 효율적인 코드를 생성해서 프로그램의 실행 속도를 높일 수 있다.03. 변수의 타입 종류기본 타입 (Primitive Types)기본 타입은 가장 기본적인 데이터 타입으로, 메모리에 직접 값을 저장합니다. Java에서는 8가지 기본 타입을 제공합니다.  정수형          byte: 8비트 정수. 범위는 -128에서 127까지      short: 16비트 정수. 범위는 -32,768에서 32,767까지      int: 32비트 정수. 대부분의 정수를 표현하는 데 사용. 범위는 약 -2.1억에서 2.1억까지      long: 64비트 정수. 매우 큰 정수 표현에 사용. 끝에 L이나 l을 붙여 표시            실수형          float: 32비트 실수. 소수점을 포함하는 수를 표현. 끝에 F나 f를 붙여 표시      double: 64비트 실수. float보다 더 큰 범위와 정밀도를 가짐. 실수 표현의 기본 타입            문자형          char: 단일 16비트 유니코드 문자를 표현. 작은따옴표(‘)로 묶어 표시            논리형          boolean: 참(true) 또는 거짓(false)만을 저장. 조건문과 논리 연산에서 사용      참조 타입 (Reference Types)참조 타입은 객체의 참조(주소)를 저장합니다. 기본 타입을 제외한 모든 타입(클래스, 인터페이스, 배열 등)이 여기에 속한다.  클래스 타입: 사용자가 정의한 클래스 또는 자바가 제공하는 클래스(String, Integer 등)의 인스턴스를 참조.  인터페이스 타입: 하나 이상의 추상 메소드를 정의한 인터페이스의 참조.  배열 타입: 같은 타입의 여러 변수를 하나의 묶음으로 다루는 배열.04. 변수와 메모리 공간 크기  정수형          byte: -128 ~ 127 (1byte)      short: -32,768 ~ 32,767 (2byte)      int: -2,147,483,648 ~ 2,147,483,647 (약 20억) (4byte)      long: -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807 (8byte)        실수형          float: 대략 -3.4E38 ~ 3.4E38, 7자리 정밀도 (4byte)      double: 대략 -1.7E308 ~ 1.7E308, 15자리 정밀도 (8byte)        문자형          char: 문자 하나(2byte)        논리형          boolean: (1byte)      "
  },
  
  {
    "title": "JAVA study (01) - 자바란?",
    "url": "/posts/JAVA-study-(01)-%EC%9E%90%EB%B0%94%EB%9E%80/",
    "categories": "Java, Study",
    "tags": "Java",
    "date": "2024-02-16 00:00:00 +0900",
    





    
    "snippet": "🔎JAVA01. 자바란?  자바(Java)는 C언어에 객체 지향적 기능을 추가하여 만든 C++과는 달리, 처음부터 객체 지향 언어로 개발된 프로그래밍 언어이다. 자바는 가상 머신 (Java Virtual Machine) 을 사용하여, 운영체제에 상관없이 독립적으로 동작할 수 있고, 이러한 이점은 수많은 개발자로 하여금 자바를 사용하게 하는 원동력이 되...",
    "content": "🔎JAVA01. 자바란?  자바(Java)는 C언어에 객체 지향적 기능을 추가하여 만든 C++과는 달리, 처음부터 객체 지향 언어로 개발된 프로그래밍 언어이다. 자바는 가상 머신 (Java Virtual Machine) 을 사용하여, 운영체제에 상관없이 독립적으로 동작할 수 있고, 이러한 이점은 수많은 개발자로 하여금 자바를 사용하게 하는 원동력이 되고 있다.02. 자바의 역사1991년 Sun Microsystems의 엔지니어인 제임스 고슬링(James Gosling)을 중심으로 그린 프로젝트(Green Project)라는 이름으로 시작되었습니다. 당시 목표는 소비자 가전 제품에 사용할 수 있는 소프트웨어 기술을 개발하는 것이었다.1995년 자바(Java)라는 이름으로 공식 발표되었고, 처음에는 인터넷에서 애플릿(applet)을 실행하기 위한 언어로 주목받았다.1996년 자바의 첫 번째 버전인 JDK 1.0이 발표되었다. 이후 인터넷의 급속한 성장과 함께 자바도 빠르게 발전했다.1998년 JDK 1.2 발표와 함께 자바는 엔터프라이즈 환경에서도 널리 사용되기 시작했다. 이 버전부터 자바는 플랫폼 독립적인 언어로서의 입지를 확고히 했다.2002년대 자바 2 플랫폼, 엔터프라이즈 에디션(J2EE) 및 자바 2 플랫폼, 마이크로 에디션(J2ME) 등 다양한 플랫폼을 통해 자바의 활용 범위가 확장되었다.2010년 오라클 인수 오라클이 Sun Microsystems를 인수하면서 자바의 새로운 시대가 시작되었고, 오라클은 자바의 발전을 계속해서 지원하고 있다.2011년 이후 자바 7,8 버전 출시 자바 7, 자바 8 등의 버전이 출시되며, 특히 자바 8에서는 람다 표현식 같은 중요한 기능들이 추가되었다. 이는 개발자들에게 함수형 프로그래밍을 접근하기 용이하게 만들었다.2017년 자바 9의 출시와 함께 모듈 시스템(JPMS)이 도입되었습니다. 이는 자바 애플리케이션의 모듈화를 통해 더욱 체계적인 개발이 가능하게 했어요.최근 동향 자바는 오라클뿐만 아니라 오픈JDK와 같은 여러 커뮤니티의 지원을 받으며 지속적으로 발전하고 있\u001d. 또한, 오라클은 6개월마다 주요 업데이트를 출시하는 새로운 릴리스 모델을 도입했다.03. 자바의 특징1) 플랫폼 독립성 JAVA는 “한 번 작성하면, 어디서든 실행된다(Write Once, Run Anywhere)”라는 슬로건 아래 설계되었다. JAVA 프로그램은 JAVA 가상 머신(JVM) 위에서 실행되기 때문에, 특정 시스템에 종속적이지 않고 다양한 환경에서 실행될 수 있다.2) 객체 지향 프로그래밍(OOP) JAVA는 객체 지향 프로그래밍 언어로, 상속, 캡슐화, 다형성 등의 객체 지향 원칙을 완전히 지원한다. 이를 통해 유지 보수가 쉽고, 확장성이 뛰어난 코드를 작성할 수 있다.3) 메모리 관리 JAVA는 가비지 컬렉션(Garbage Collection)을 통해 프로그래머가 직접 메모리를 관리하지 않아도 되도록 설계되었다. 이는 메모리 누수를 줄이고, 프로그램의 안정성을 높이는 데 도움을 준다.4) 멀티스레드 JAVA는 멀티스레딩을 기본적으로 지원한다. 이를 통해 개발자는 다양한 작업을 동시에 처리할 수 있으며, 이는 애플리케이션의 성능 향상에 기여한다.5) 보안 샌드박스 JAVA는 샌드박스 보안 모델을 사용하여 시스템의 보안을 강화함과 동시에 클래스 로더(Class Loader), 바이트코드 검증기(Bytecode Verifier) 등의 메커니즘을 통해 안전하지 않은 코드의 실행을 방지한다.6) 풍부한 표준 라이브러리 JAVA는 방대한 표준 라이브러리를 제공한다. 이러한 라이브러리는 파일 입출력, 네트워크 프로그래밍, 데이터 구조 등 다양한 분야에서 유용하게 사용할 수 있다.7) 네트워크 센트릭 JAVA는 인터넷에서의 애플리케이션 개발을 염두에 두고 설계되었다. 따라서, 웹 애플리케이션 서버로부터 데이터를 처리하고 관리하는 다양한 네트워크 기능을 쉽게 구현할 수 있다.8) 동적 로딩 JAVA를 실행시에 모든 클래스가 로딩되는것이 아니라, 필요한 시점에 클래스를 로딩하여 사용할 수 있다."
  },
  
  {
    "title": "replacingOccurrences (1) - 문자열 치환",
    "url": "/posts/swift-%EB%A9%94%EC%84%9C%EB%93%9C-replacingOccurances()-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%B9%98%ED%99%98/",
    "categories": "Swift, StringMethods",
    "tags": "swift, methods, SwiftStringMethods",
    "date": "2024-02-14 00:00:00 +0900",
    





    
    "snippet": "replacingOccurrences(of:with:)메소드 설명  Returns a new string in which all occurrences of a target. string in the receiver are replaced by another given string.파라미터를 통해 받은 문자열을 다른 문자열로 대체하고 새 문자열을 반환한...",
    "content": "replacingOccurrences(of:with:)메소드 설명  Returns a new string in which all occurrences of a target. string in the receiver are replaced by another given string.파라미터를 통해 받은 문자열을 다른 문자열로 대체하고 새 문자열을 반환한다.애플 공식 문서func replacingOccurrences(    of target: String,    with replacement: String) -&gt; String사용 예시예시 1 : String 을 바꿀때import Foundation var text = \"helloMath\"// hello 가 happy로 바뀜var newText = text.replacingOccurrences(of: \"hello\", with: \"happy\")// bye 가 존재하지 않음으로 기존 text 값을 반환함var newText2 = string.replacingOccurrences(of: \"bye\", with: \"happy\")print(newText) // \"happyMath\"print(newText2) // \"helloMath\"예시 2 : Character를 바꿀때import Foundation var text = \"helloSwift-\"//기존 변수 값을 변환text = text.replacingOccurrences(of: \"-\", with: \"!\")//새로운 변수에 값을 할당var newText = string.replacingOccurrences(of: \"-\", with: \"!\")print(text) // \"helloSwift!\"print(newText) // \"helloSwift!\"주의사항  새 문자열을 반환하기 때문에, 새 문자열의 반환값을 받을 변수 및 함수의 return 에 사용할 수 있다.애플 공식 문서"
  },
  
  {
    "title": "깃 블로그 생성하기 (1)",
    "url": "/posts/Jekyll-Chirpy-%ED%85%8C%EB%A7%88-%EA%B9%83-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0(1)/",
    "categories": "",
    "tags": "",
    "date": "2024-01-05 00:00:00 +0900",
    





    
    "snippet": "깃허브 블로그\b깃헙 블로그(Github blog)의 정식 명칭은 깃헙 페이지(Github page)입니다. 전 세계 개발자들이 이용하는 오픈소스 라이브러리 Github에서 제공하는 웹 호스팅 서비스로 유저가 무료로 자유롭게 사이트(블로그)를 제작하고 운영할 수 있는 서비스입니다. Github이 개발자들을 위한 서비스인만큼, 깃헙 블로그 역시 많은 개발...",
    "content": "깃허브 블로그\b깃헙 블로그(Github blog)의 정식 명칭은 깃헙 페이지(Github page)입니다. 전 세계 개발자들이 이용하는 오픈소스 라이브러리 Github에서 제공하는 웹 호스팅 서비스로 유저가 무료로 자유롭게 사이트(블로그)를 제작하고 운영할 수 있는 서비스입니다. Github이 개발자들을 위한 서비스인만큼, 깃헙 블로그 역시 많은 개발자가 즐겨 사용하고 있습니다.notion , velog , tistory 등 다양한 무료 블로그 플랫폼을 이용할 수 있지만, 제가 깃 허브 블로그를 활용하는 이유는 아래와 같습니다.개발자들 및 디자이너들을 포트폴리오를 만들때 Github + 블로그를 동시에 관리하는 경우가 많습니다. 특히나 개발자의 경우 본인의 코드를 매일 커밋하여 자신이 공부했던 기록과 활동들을 증명해야 하고, 이에대한 상세한 내용들을 블로그에 정리하는 경우가 많습니다.깃허브 블로그를 이용하면 기존 블로그와 따로 작성하는 느낌이 아닌, commit &amp; push 로 블로그를 관리해야 하기에, 본인의 깃허브 페이지에 블로그 활동또한 동시에 기록되는 장점이 있습니다.01 Ruby 설치하기깃허브 블로그를 사용하기 위해서는 ruby를 필수적으로 설치해야 합니다.ruby를 설치하는 이유는 지킬(jekyll)을 통해 환경설정 및 컴퓨터 로그 기록을 나타나게 해야하기 때문입니다.아래 명령어를 터미널에 입력하여 루비를 설치합니다.brew install rubyListsOrdered list  Firstly  Secondly  ThirdlyUnordered list  Chapter          Section                  Paragraph                    ToDo list  Job          Step 1      Step 2      Step 3      Description list  Sun  the star around which the earth orbits  Moon  the natural satellite of the earth, visible by reflected light from the sunBlock Quote  This line shows the block quote.Prompts  An example showing the tip type prompt.  An example showing the info type prompt.  An example showing the warning type prompt.  An example showing the danger type prompt.Tables            Company      Contact      Country                  Alfreds Futterkiste      Maria Anders      Germany              Island Trading      Helen Bennett      UK              Magazzini Alimentari Riuniti      Giovanni Rovelli      Italy      Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Inline codeThis is an example of Inline Code.FilepathHere is the /path/to/the/file.extend.Code blocksCommonThis is a common code snippet, without syntax highlight and line number.Specific Languageif [ $? -ne 0 ]; then  echo \"The command was not successful.\";  #do the needful / exitfi;Specific filename@import  \"colors/light-typography\",  \"colors/dark-typography\";MathematicsThe mathematics powered by MathJax:\\[\\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}\\]When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Mermaid SVG gantt  title  Adding GANTT diagram functionality to mermaid  apple :a, 2017-07-20, 1w  banana :crit, b, 2017-07-23, 1d  cherry :active, c, after b a, 1dImagesDefault (with caption)Full screen width and center alignmentLeft alignedFloat to leftPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Float to rightPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Dark/Light mode &amp; ShadowThe image below will toggle dark/light mode based on theme preference, notice it has shadows.VideoReverse Footnote            The footnote source &#8617;              The 2nd footnote source &#8617;      "
  }
  
]

